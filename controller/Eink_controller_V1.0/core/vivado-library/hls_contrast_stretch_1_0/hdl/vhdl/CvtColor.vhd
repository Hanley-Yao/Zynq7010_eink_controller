-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CvtColor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_0_V_read : OUT STD_LOGIC;
    p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_1_V_read : OUT STD_LOGIC;
    p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_2_V_read : OUT STD_LOGIC;
    p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_0_V_write : OUT STD_LOGIC;
    p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_1_V_write : OUT STD_LOGIC;
    p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of CvtColor is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_59CAC0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010110011100101011000000";
    constant ap_const_lv30_3FE9FBE7 : STD_LOGIC_VECTOR (29 downto 0) := "111111111010011111101111100111";
    constant ap_const_lv32_7178D4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000011100010111100011010100";
    constant ap_const_lv31_7FD24DD2 : STD_LOGIC_VECTOR (30 downto 0) := "1111111110100100100110111010010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_35_i_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_src_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_2_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter4_tmp_35_i_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_2_V_blk_n : STD_LOGIC;
    signal j_i_reg_174 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_src_cols_V_read_reg_756 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal p_src_rows_V_read_reg_761 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_194_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_770 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_i_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_35_i_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_35_i_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_35_i_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_209_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_39_reg_784 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_op_assign_fu_215_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_op_assign_reg_789 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_i_op_assign_reg_789 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_op_assign_2_fu_221_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_op_assign_2_reg_795 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_reg_801 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal signbit_reg_806 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_signbit_reg_806 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_reg_813 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_823 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_725_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_829 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_733_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_reg_834 : STD_LOGIC_VECTOR (31 downto 0);
    signal signbit_3_reg_839 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_signbit_3_reg_839 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_30_reg_846 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_856 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_3_fu_324_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_reg_862 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i_i_i1_i_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i1_i_reg_868 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i2_s_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i2_s_reg_874 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_745_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_4_reg_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal signbit_2_reg_885 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_signbit_2_reg_885 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_reg_892 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_902 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_31_fu_420_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_31_reg_908 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i_i_i21_i_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i21_i_reg_914 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_reg_920 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_33_fu_524_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_33_reg_926 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_fu_542_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_reg_931 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i_i_i_i_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i_i_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_i_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_i_reg_943 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_646_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_949 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal i_i_reg_163 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal i_cast_i_cast_fu_185_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_cast_i_cast_fu_200_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i1_fu_230_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_16_i_i_i_fu_314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_329_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_317_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_i_i_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_359_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i12_i_fu_410_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_i16_i_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_2_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_i_i_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_i_i_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i3_i_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i4_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_9_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i6_i_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i7_i_fu_510_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i8_i_fu_517_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_i_i_i_fu_532_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_i_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_577_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_i22_i_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_i25_i_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i26_i_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_3_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i2_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i29_i_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i30_i_fu_632_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i31_i_fu_639_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_i_i_i_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_i_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_i_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_2_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i_s_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_10_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_i_fu_690_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i_i_fu_697_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_713_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_713_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_22_cast_i_fu_237_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_725_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_725_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_733_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_733_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_745_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component hls_contrast_streg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_contrast_strehbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        din2 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hls_contrast_streibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    hls_contrast_streg8j_U60 : component hls_contrast_streg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 24,
        din2_WIDTH => 30,
        dout_WIDTH => 32)
    port map (
        din0 => i_op_assign_reg_789,
        din1 => grp_fu_713_p1,
        din2 => grp_fu_713_p2,
        dout => grp_fu_713_p3);

    hls_contrast_strehbi_U61 : component hls_contrast_strehbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 22,
        din2_WIDTH => 30,
        dout_WIDTH => 32)
    port map (
        din0 => i_op_assign_2_reg_795,
        din1 => grp_fu_725_p1,
        din2 => grp_fu_725_p2,
        dout => grp_fu_725_p3);

    hls_contrast_streg8j_U62 : component hls_contrast_streg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 24,
        din2_WIDTH => 30,
        dout_WIDTH => 32)
    port map (
        din0 => i_op_assign_2_reg_795,
        din1 => grp_fu_733_p1,
        din2 => grp_fu_733_p2,
        dout => grp_fu_733_p3);

    hls_contrast_streibs_U63 : component hls_contrast_streibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 23,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => ap_reg_pp0_iter2_i_op_assign_reg_789,
        din1 => grp_fu_745_p1,
        din2 => tmp2_reg_829,
        dout => grp_fu_745_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_189_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_i_fu_189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((tmp_i_fu_189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i_i_reg_163 <= i_reg_770;
            elsif ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_i_reg_163 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_i_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_35_i_fu_204_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_i_reg_174 <= j_fu_209_p2;
            elsif (((tmp_i_fu_189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_i_reg_174 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_tmp_35_i_reg_775 <= tmp_35_i_reg_775;
                tmp_35_i_reg_775 <= tmp_35_i_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_i_op_assign_reg_789 <= i_op_assign_reg_789;
                ap_reg_pp0_iter2_tmp_35_i_reg_775 <= ap_reg_pp0_iter1_tmp_35_i_reg_775;
                ap_reg_pp0_iter3_signbit_3_reg_839 <= signbit_3_reg_839;
                ap_reg_pp0_iter3_signbit_reg_806 <= signbit_reg_806;
                ap_reg_pp0_iter3_tmp_35_i_reg_775 <= ap_reg_pp0_iter2_tmp_35_i_reg_775;
                ap_reg_pp0_iter4_signbit_2_reg_885 <= signbit_2_reg_885;
                ap_reg_pp0_iter4_tmp_35_i_reg_775 <= ap_reg_pp0_iter3_tmp_35_i_reg_775;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_op_assign_2_reg_795 <= i_op_assign_2_fu_221_p2;
                i_op_assign_reg_789 <= i_op_assign_fu_215_p2;
                tmp_39_reg_784 <= p_src_data_stream_0_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_770 <= i_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_38_i_i_i1_i_reg_868 <= p_38_i_i_i1_i_fu_367_p2;
                p_38_i_i_i21_i_reg_914 <= p_38_i_i_i21_i_fu_463_p2;
                p_39_demorgan_i_i_i2_s_reg_874 <= p_39_demorgan_i_i_i2_s_fu_373_p2;
                p_39_demorgan_i_i_i_reg_920 <= p_39_demorgan_i_i_i_fu_469_p2;
                p_Val2_31_reg_908 <= p_Val2_31_fu_420_p2;
                p_Val2_3_reg_862 <= p_Val2_3_fu_324_p2;
                p_Val2_7_reg_892 <= grp_fu_745_p3(29 downto 22);
                signbit_2_reg_885 <= grp_fu_745_p3(31 downto 31);
                tmp_29_reg_897 <= grp_fu_745_p3(21 downto 21);
                tmp_5_reg_902 <= grp_fu_745_p3(31 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_38_i_i_i_i_reg_937 <= p_38_i_i_i_i_fu_585_p2;
                p_39_demorgan_i_i_i_i_reg_943 <= p_39_demorgan_i_i_i_i_fu_591_p2;
                p_Val2_33_reg_926 <= p_Val2_33_fu_524_p3;
                p_Val2_8_reg_931 <= p_Val2_8_fu_542_p2;
                p_Val2_s_reg_949 <= p_Val2_s_fu_646_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_2_reg_813 <= grp_fu_713_p3(29 downto 22);
                p_Val2_30_reg_846 <= grp_fu_733_p3(29 downto 22);
                signbit_3_reg_839 <= grp_fu_733_p3(31 downto 31);
                signbit_reg_806 <= grp_fu_713_p3(31 downto 31);
                tmp_33_reg_851 <= grp_fu_733_p3(21 downto 21);
                tmp_3_reg_823 <= grp_fu_713_p3(31 downto 30);
                tmp_7_reg_856 <= grp_fu_733_p3(31 downto 30);
                tmp_reg_818 <= grp_fu_713_p3(21 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_src_cols_V_read_reg_756 <= p_src_cols_V_dout;
                p_src_rows_V_read_reg_761 <= p_src_rows_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_4_reg_880 <= grp_fu_745_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_5_reg_834 <= grp_fu_733_p3;
                r_V_reg_801 <= grp_fu_713_p3;
                tmp2_reg_829 <= grp_fu_725_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, tmp_i_fu_189_p2, ap_CS_fsm_state2, tmp_35_i_fu_204_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_189_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_35_i_fu_204_p2 = ap_const_lv1_0))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_35_i_fu_204_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    Range1_all_ones_1_fu_567_p2 <= "1" when (tmp_5_reg_902 = ap_const_lv2_3) else "0";
    Range1_all_ones_2_fu_445_p2 <= "1" when (tmp_7_reg_856 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_349_p2 <= "1" when (tmp_3_reg_823 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_572_p2 <= "1" when (tmp_5_reg_902 = ap_const_lv2_0) else "0";
    Range1_all_zeros_2_fu_450_p2 <= "1" when (tmp_7_reg_856 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_354_p2 <= "1" when (tmp_3_reg_823 = ap_const_lv2_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, tmp_35_i_reg_775, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, tmp_35_i_reg_775, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, tmp_35_i_reg_775, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, tmp_35_i_reg_775)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_35_i_reg_775 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_reg_pp0_iter4_tmp_35_i_reg_775)
    begin
                ap_block_state8_pp0_stage0_iter5 <= (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(tmp_35_i_fu_204_p2)
    begin
        if ((tmp_35_i_fu_204_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, tmp_i_fu_189_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_189_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_i_fu_189_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_189_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_i29_i_fu_626_p2 <= (p_39_demorgan_i_not_i_3_fu_621_p2 or neg_src_not_i_i26_i_fu_611_p2);
    brmerge_i_i6_i_fu_504_p2 <= (p_39_demorgan_i_not_i_fu_499_p2 or neg_src_not_i_i3_i_fu_489_p2);
    brmerge_i_i_i_fu_684_p2 <= (p_39_demorgan_i_not_i_2_fu_679_p2 or neg_src_not_i_i_i_fu_669_p2);
    brmerge_i_i_not_i_i2_fu_616_p2 <= (p_39_demorgan_i_i_i_reg_920 and neg_src_not_i_i26_i_fu_611_p2);
    brmerge_i_i_not_i_i4_fu_494_p2 <= (p_39_demorgan_i_i_i2_s_reg_874 and neg_src_not_i_i3_i_fu_489_p2);
    brmerge_i_i_not_i_i_s_fu_674_p2 <= (p_39_demorgan_i_i_i_i_reg_943 and neg_src_not_i_i_i_fu_669_p2);
    carry_1_fu_561_p2 <= (tmp_30_fu_535_p3 and tmp_14_i_i_i_fu_555_p2);
    carry_2_fu_439_p2 <= (tmp_34_fu_413_p3 and tmp_17_i_i16_i_fu_433_p2);
    carry_fu_343_p2 <= (tmp_26_fu_317_p3 and tmp_17_i_i_i_fu_337_p2);
    deleted_zeros_1_fu_577_p3 <= 
        Range1_all_ones_1_fu_567_p2 when (carry_1_fu_561_p2(0) = '1') else 
        Range1_all_zeros_1_fu_572_p2;
    deleted_zeros_2_fu_455_p3 <= 
        Range1_all_ones_2_fu_445_p2 when (carry_2_fu_439_p2(0) = '1') else 
        Range1_all_zeros_2_fu_450_p2;
    deleted_zeros_fu_359_p3 <= 
        Range1_all_ones_fu_349_p2 when (carry_fu_343_p2(0) = '1') else 
        Range1_all_zeros_fu_354_p2;
    grp_fu_713_p1 <= ap_const_lv32_59CAC0(24 - 1 downto 0);
    grp_fu_713_p2 <= tmp_22_cast_i_fu_237_p1(30 - 1 downto 0);
    grp_fu_725_p1 <= ap_const_lv30_3FE9FBE7(22 - 1 downto 0);
    grp_fu_725_p2 <= tmp_22_cast_i_fu_237_p1(30 - 1 downto 0);
    grp_fu_733_p1 <= ap_const_lv32_7178D4(24 - 1 downto 0);
    grp_fu_733_p2 <= tmp_22_cast_i_fu_237_p1(30 - 1 downto 0);
    grp_fu_745_p1 <= ap_const_lv31_7FD24DD2(23 - 1 downto 0);
    i_cast_i_cast_fu_185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_163),16));
    i_fu_194_p2 <= std_logic_vector(unsigned(i_i_reg_163) + unsigned(ap_const_lv11_1));
    i_op_assign_2_fu_221_p2 <= (p_src_data_stream_2_V_dout xor ap_const_lv8_80);
    i_op_assign_fu_215_p2 <= (p_src_data_stream_1_V_dout xor ap_const_lv8_80);
    j_cast_i_cast_fu_200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_174),16));
    j_fu_209_p2 <= std_logic_vector(unsigned(j_i_reg_174) + unsigned(ap_const_lv11_1));
    neg_src_10_fu_659_p2 <= (tmp_15_i_i_i_fu_654_p2 and ap_reg_pp0_iter4_signbit_2_reg_885);
    neg_src_9_fu_479_p2 <= (tmp_18_i_i_i_fu_474_p2 and ap_reg_pp0_iter3_signbit_reg_806);
    neg_src_fu_601_p2 <= (tmp_18_i_i22_i_fu_596_p2 and ap_reg_pp0_iter3_signbit_3_reg_839);
    neg_src_not_i_i26_i_fu_611_p2 <= (signbit_not_i25_i_fu_606_p2 or p_38_i_i_i21_i_reg_914);
    neg_src_not_i_i3_i_fu_489_p2 <= (signbit_not_i_i_fu_484_p2 or p_38_i_i_i1_i_reg_868);
    neg_src_not_i_i_i_fu_669_p2 <= (signbit_not_i_fu_664_p2 or p_38_i_i_i_i_reg_937);
    p_38_i_i_i1_i_fu_367_p2 <= (carry_fu_343_p2 and Range1_all_ones_fu_349_p2);
    p_38_i_i_i21_i_fu_463_p2 <= (carry_2_fu_439_p2 and Range1_all_ones_2_fu_445_p2);
    p_38_i_i_i_i_fu_585_p2 <= (carry_1_fu_561_p2 and Range1_all_ones_1_fu_567_p2);
    p_39_demorgan_i_i_i2_s_fu_373_p2 <= (signbit_reg_806 or deleted_zeros_fu_359_p3);
    p_39_demorgan_i_i_i_fu_469_p2 <= (signbit_3_reg_839 or deleted_zeros_2_fu_455_p3);
    p_39_demorgan_i_i_i_i_fu_591_p2 <= (signbit_2_reg_885 or deleted_zeros_1_fu_577_p3);
    p_39_demorgan_i_not_i_2_fu_679_p2 <= (p_39_demorgan_i_i_i_i_reg_943 xor ap_const_lv1_1);
    p_39_demorgan_i_not_i_3_fu_621_p2 <= (p_39_demorgan_i_i_i_reg_920 xor ap_const_lv1_1);
    p_39_demorgan_i_not_i_fu_499_p2 <= (p_39_demorgan_i_i_i2_s_reg_874 xor ap_const_lv1_1);
    p_Val2_31_fu_420_p2 <= std_logic_vector(unsigned(tmp_16_i_i12_i_fu_410_p1) + unsigned(p_Val2_30_reg_846));
    p_Val2_33_fu_524_p3 <= 
        p_mux_i_i7_i_fu_510_p3 when (brmerge_i_i6_i_fu_504_p2(0) = '1') else 
        p_i_i8_i_fu_517_p3;
    p_Val2_3_fu_324_p2 <= std_logic_vector(unsigned(tmp_16_i_i_i_fu_314_p1) + unsigned(p_Val2_2_reg_813));
    p_Val2_8_fu_542_p2 <= std_logic_vector(unsigned(tmp_13_i_i_i_fu_532_p1) + unsigned(p_Val2_7_reg_892));
    p_Val2_s_fu_646_p3 <= 
        p_mux_i_i30_i_fu_632_p3 when (brmerge_i_i29_i_fu_626_p2(0) = '1') else 
        p_i_i31_i_fu_639_p3;

    p_dst_data_stream_0_V_blk_n_assign_proc : process(p_dst_data_stream_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775)
    begin
        if (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_0_V_blk_n <= p_dst_data_stream_0_V_full_n;
        else 
            p_dst_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_0_V_din <= p_Val2_33_reg_926;

    p_dst_data_stream_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst_data_stream_1_V_blk_n_assign_proc : process(p_dst_data_stream_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775)
    begin
        if (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_1_V_blk_n <= p_dst_data_stream_1_V_full_n;
        else 
            p_dst_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_1_V_din <= 
        p_mux_i_i_i_fu_690_p3 when (brmerge_i_i_i_fu_684_p2(0) = '1') else 
        p_i_i_i_fu_697_p3;

    p_dst_data_stream_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst_data_stream_2_V_blk_n_assign_proc : process(p_dst_data_stream_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775)
    begin
        if (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_2_V_blk_n <= p_dst_data_stream_2_V_full_n;
        else 
            p_dst_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_2_V_din <= p_Val2_s_reg_949;

    p_dst_data_stream_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_tmp_35_i_reg_775, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter4_tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_2_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i31_i_fu_639_p3 <= 
        ap_const_lv8_0 when (neg_src_fu_601_p2(0) = '1') else 
        p_Val2_31_reg_908;
    p_i_i8_i_fu_517_p3 <= 
        ap_const_lv8_0 when (neg_src_9_fu_479_p2(0) = '1') else 
        p_Val2_3_reg_862;
    p_i_i_i_fu_697_p3 <= 
        ap_const_lv8_0 when (neg_src_10_fu_659_p2(0) = '1') else 
        p_Val2_8_reg_931;
    p_mux_i_i30_i_fu_632_p3 <= 
        p_Val2_31_reg_908 when (brmerge_i_i_not_i_i2_fu_616_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_mux_i_i7_i_fu_510_p3 <= 
        p_Val2_3_reg_862 when (brmerge_i_i_not_i_i4_fu_494_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_mux_i_i_i_fu_690_p3 <= 
        p_Val2_8_reg_931 when (brmerge_i_i_not_i_i_s_fu_674_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_src_cols_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_0_V_blk_n_assign_proc : process(p_src_data_stream_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_35_i_reg_775)
    begin
        if (((tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_0_V_blk_n <= p_src_data_stream_0_V_empty_n;
        else 
            p_src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_35_i_reg_775, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_1_V_blk_n_assign_proc : process(p_src_data_stream_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_35_i_reg_775)
    begin
        if (((tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_1_V_blk_n <= p_src_data_stream_1_V_empty_n;
        else 
            p_src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_35_i_reg_775, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_2_V_blk_n_assign_proc : process(p_src_data_stream_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_35_i_reg_775)
    begin
        if (((tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_2_V_blk_n <= p_src_data_stream_2_V_empty_n;
        else 
            p_src_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_35_i_reg_775, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_35_i_reg_775 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    signbit_not_i25_i_fu_606_p2 <= (ap_reg_pp0_iter3_signbit_3_reg_839 xor ap_const_lv1_1);
    signbit_not_i_fu_664_p2 <= (ap_reg_pp0_iter4_signbit_2_reg_885 xor ap_const_lv1_1);
    signbit_not_i_i_fu_484_p2 <= (ap_reg_pp0_iter3_signbit_reg_806 xor ap_const_lv1_1);
    tmp_13_i_i_i_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_reg_897),8));
    tmp_14_i_i_i_fu_555_p2 <= (tmp_31_fu_547_p3 xor ap_const_lv1_1);
    tmp_15_i_i_i_fu_654_p2 <= (p_38_i_i_i_i_reg_937 xor ap_const_lv1_1);
    tmp_16_i_i12_i_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_reg_851),8));
    tmp_16_i_i_i_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_818),8));
    tmp_17_i_i16_i_fu_433_p2 <= (tmp_35_fu_425_p3 xor ap_const_lv1_1);
    tmp_17_i_i_i_fu_337_p2 <= (tmp_27_fu_329_p3 xor ap_const_lv1_1);
    tmp_18_i_i22_i_fu_596_p2 <= (p_38_i_i_i21_i_reg_914 xor ap_const_lv1_1);
    tmp_18_i_i_i_fu_474_p2 <= (p_38_i_i_i1_i_reg_868 xor ap_const_lv1_1);
    tmp_22_cast_i_fu_237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i1_fu_230_p3),32));
    tmp_26_fu_317_p3 <= r_V_reg_801(29 downto 29);
    tmp_27_fu_329_p3 <= p_Val2_3_fu_324_p2(7 downto 7);
    tmp_30_fu_535_p3 <= r_V_4_reg_880(29 downto 29);
    tmp_31_fu_547_p3 <= p_Val2_8_fu_542_p2(7 downto 7);
    tmp_34_fu_413_p3 <= r_V_5_reg_834(29 downto 29);
    tmp_35_fu_425_p3 <= p_Val2_31_fu_420_p2(7 downto 7);
    tmp_35_i_fu_204_p2 <= "1" when (unsigned(j_cast_i_cast_fu_200_p1) < unsigned(p_src_cols_V_read_reg_756)) else "0";
    tmp_i1_fu_230_p3 <= (tmp_39_reg_784 & ap_const_lv22_0);
    tmp_i_fu_189_p2 <= "1" when (unsigned(i_cast_i_cast_fu_185_p1) < unsigned(p_src_rows_V_read_reg_761)) else "0";
end behav;

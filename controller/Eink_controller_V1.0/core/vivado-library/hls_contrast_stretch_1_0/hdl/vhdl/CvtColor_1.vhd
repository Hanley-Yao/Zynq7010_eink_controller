-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CvtColor_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_0_V_read : OUT STD_LOGIC;
    p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_1_V_read : OUT STD_LOGIC;
    p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_2_V_read : OUT STD_LOGIC;
    p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_0_V_write : OUT STD_LOGIC;
    p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_1_V_write : OUT STD_LOGIC;
    p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of CvtColor_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv29_1322D0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100110010001011010000";
    constant ap_const_lv28_74BC6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001110100101111000110";
    constant ap_const_lv30_259168 : STD_LOGIC_VECTOR (29 downto 0) := "000000001001011001000101101000";
    constant ap_const_lv32_2DA1CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000001011011010000111001010";
    constant ap_const_lv32_20000000 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_const_lv32_241893 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001001000001100010010011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_src_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_2_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter7_tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_1_V_blk_n : STD_LOGIC;
    signal p_dst_data_stream_2_V_blk_n : STD_LOGIC;
    signal j_i_reg_176 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_src_cols_V_read_reg_673 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal p_src_rows_V_read_reg_678 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_196_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_687 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_36_i_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_36_i_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_211_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_23_reg_701 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_23_reg_701 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_23_reg_701 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_tmp_23_reg_701 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_reg_707 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_24_reg_707 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_24_reg_707 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_reg_712 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_25_reg_712 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_25_reg_712 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_tmp_25_reg_712 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_i_fu_626_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_6_i_reg_718 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_632_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_2_reg_723 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_639_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_reg_728 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal p_Val2_4_reg_733 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_738 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_20_fu_280_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_20_reg_743 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_p_Val2_20_reg_743 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_p_Val2_20_reg_743 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_op_assign_5_fu_295_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_op_assign_5_reg_748 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_op_assign_6_fu_304_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_op_assign_6_reg_753 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_reg_758 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal signbit_reg_763 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_signbit_reg_763 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_reg_770 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_780 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_661_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_3_reg_786 : STD_LOGIC_VECTOR (31 downto 0);
    signal signbit_1_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_signbit_1_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_reg_798 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_808 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_8_fu_390_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_reg_814 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i_i_i_i_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i_i_reg_820 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_i_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_i_reg_826 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_18_fu_454_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_18_reg_832 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i_i_i15_i_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i15_i_reg_838 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_reg_844 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal i_i_reg_165 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal i_cast_i_cast_fu_187_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_cast_i_cast_fu_202_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_i_i_i_fu_245_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_5_fu_255_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_260_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_not_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_i_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_cast_i_fu_288_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_cast_i_fu_291_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_cast_i_fu_301_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_i_i_i_fu_380_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_395_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_383_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_i_i_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_i6_i_fu_444_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_447_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_i10_i_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_i_i_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_i_i_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_i_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i_s_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i2_i_fu_544_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i_i_fu_551_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_i_i16_i_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_i19_i_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i20_i_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_1_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i2_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_4_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i23_i_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i24_i_fu_603_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i25_i_fu_610_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_i_fu_626_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_i_fu_626_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_632_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_632_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_639_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_639_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_639_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_649_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_649_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_661_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_661_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_632_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_639_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_639_p20 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_6_i_fu_626_p00 : STD_LOGIC_VECTOR (28 downto 0);

    component hls_contrast_strebkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component hls_contrast_strecud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component hls_contrast_stredEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component hls_contrast_streeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    hls_contrast_strebkb_U30 : component hls_contrast_strebkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 22,
        dout_WIDTH => 29)
    port map (
        din0 => r_V_6_i_fu_626_p0,
        din1 => r_V_6_i_fu_626_p1,
        dout => r_V_6_i_fu_626_p2);

    hls_contrast_strecud_U31 : component hls_contrast_strecud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 20,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_632_p0,
        din1 => grp_fu_632_p1,
        din2 => r_V_6_i_reg_718,
        dout => grp_fu_632_p3);

    hls_contrast_stredEe_U32 : component hls_contrast_stredEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 23,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_639_p0,
        din1 => grp_fu_639_p1,
        din2 => grp_fu_639_p2,
        dout => grp_fu_639_p3);

    hls_contrast_streeOg_U33 : component hls_contrast_streeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 23,
        din2_WIDTH => 31,
        dout_WIDTH => 32)
    port map (
        din0 => i_op_assign_5_reg_748,
        din1 => grp_fu_649_p1,
        din2 => grp_fu_649_p2,
        dout => grp_fu_649_p3);

    hls_contrast_streeOg_U34 : component hls_contrast_streeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 23,
        din2_WIDTH => 31,
        dout_WIDTH => 32)
    port map (
        din0 => i_op_assign_6_reg_753,
        din1 => grp_fu_661_p1,
        din2 => grp_fu_661_p2,
        dout => grp_fu_661_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_191_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_i_fu_191_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif (((tmp_i_fu_191_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_i_reg_165 <= i_reg_687;
            elsif ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_i_reg_165 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_i_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_36_i_fu_206_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_i_reg_176 <= j_fu_211_p2;
            elsif (((tmp_i_fu_191_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_i_reg_176 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_tmp_36_i_reg_692 <= tmp_36_i_reg_692;
                tmp_36_i_reg_692 <= tmp_36_i_fu_206_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_tmp_23_reg_701 <= tmp_23_reg_701;
                ap_reg_pp0_iter2_tmp_24_reg_707 <= tmp_24_reg_707;
                ap_reg_pp0_iter2_tmp_25_reg_712 <= tmp_25_reg_712;
                ap_reg_pp0_iter2_tmp_36_i_reg_692 <= ap_reg_pp0_iter1_tmp_36_i_reg_692;
                ap_reg_pp0_iter3_tmp_23_reg_701 <= ap_reg_pp0_iter2_tmp_23_reg_701;
                ap_reg_pp0_iter3_tmp_24_reg_707 <= ap_reg_pp0_iter2_tmp_24_reg_707;
                ap_reg_pp0_iter3_tmp_25_reg_712 <= ap_reg_pp0_iter2_tmp_25_reg_712;
                ap_reg_pp0_iter3_tmp_36_i_reg_692 <= ap_reg_pp0_iter2_tmp_36_i_reg_692;
                ap_reg_pp0_iter4_tmp_23_reg_701 <= ap_reg_pp0_iter3_tmp_23_reg_701;
                ap_reg_pp0_iter4_tmp_25_reg_712 <= ap_reg_pp0_iter3_tmp_25_reg_712;
                ap_reg_pp0_iter4_tmp_36_i_reg_692 <= ap_reg_pp0_iter3_tmp_36_i_reg_692;
                ap_reg_pp0_iter5_tmp_36_i_reg_692 <= ap_reg_pp0_iter4_tmp_36_i_reg_692;
                ap_reg_pp0_iter6_p_Val2_20_reg_743 <= p_Val2_20_reg_743;
                ap_reg_pp0_iter6_tmp_36_i_reg_692 <= ap_reg_pp0_iter5_tmp_36_i_reg_692;
                ap_reg_pp0_iter7_p_Val2_20_reg_743 <= ap_reg_pp0_iter6_p_Val2_20_reg_743;
                ap_reg_pp0_iter7_signbit_1_reg_791 <= signbit_1_reg_791;
                ap_reg_pp0_iter7_signbit_reg_763 <= signbit_reg_763;
                ap_reg_pp0_iter7_tmp_36_i_reg_692 <= ap_reg_pp0_iter6_tmp_36_i_reg_692;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_op_assign_5_reg_748 <= i_op_assign_5_fu_295_p2;
                i_op_assign_6_reg_753 <= i_op_assign_6_fu_304_p2;
                p_Val2_20_reg_743 <= p_Val2_20_fu_280_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_687 <= i_fu_196_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_38_i_i_i15_i_reg_838 <= p_38_i_i_i15_i_fu_497_p2;
                p_38_i_i_i_i_reg_820 <= p_38_i_i_i_i_fu_433_p2;
                p_39_demorgan_i_i_i_i_reg_826 <= p_39_demorgan_i_i_i_i_fu_439_p2;
                p_39_demorgan_i_i_i_reg_844 <= p_39_demorgan_i_i_i_fu_503_p2;
                p_Val2_18_reg_832 <= p_Val2_18_fu_454_p2;
                p_Val2_8_reg_814 <= p_Val2_8_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_16_reg_798 <= grp_fu_661_p3(29 downto 22);
                p_Val2_7_reg_770 <= grp_fu_649_p3(29 downto 22);
                signbit_1_reg_791 <= grp_fu_661_p3(31 downto 31);
                signbit_reg_763 <= grp_fu_649_p3(31 downto 31);
                tmp_13_reg_775 <= grp_fu_649_p3(21 downto 21);
                tmp_17_reg_803 <= grp_fu_661_p3(21 downto 21);
                tmp_1_reg_808 <= grp_fu_661_p3(31 downto 30);
                tmp_s_reg_780 <= grp_fu_649_p3(31 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_2_reg_723 <= grp_fu_632_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_4_reg_733 <= grp_fu_639_p3(29 downto 22);
                tmp_reg_738 <= grp_fu_639_p3(21 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_src_cols_V_read_reg_673 <= p_src_cols_V_dout;
                p_src_rows_V_read_reg_678 <= p_src_rows_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_1_reg_728 <= grp_fu_639_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_2_reg_758 <= grp_fu_649_p3;
                r_V_3_reg_786 <= grp_fu_661_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_6_i_reg_718 <= r_V_6_i_fu_626_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_23_reg_701 <= p_src_data_stream_0_V_dout;
                tmp_24_reg_707 <= p_src_data_stream_1_V_dout;
                tmp_25_reg_712 <= p_src_data_stream_2_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, tmp_i_fu_191_p2, ap_CS_fsm_state2, tmp_36_i_fu_206_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_191_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_36_i_fu_206_p2 = ap_const_lv1_0))) and not(((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_36_i_fu_206_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    Range1_all_ones_1_fu_479_p2 <= "1" when (tmp_1_reg_808 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_415_p2 <= "1" when (tmp_s_reg_780 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_484_p2 <= "1" when (tmp_1_reg_808 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_420_p2 <= "1" when (tmp_s_reg_780 = ap_const_lv2_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, tmp_36_i_reg_692, ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, tmp_36_i_reg_692, ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, tmp_36_i_reg_692, ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter8_assign_proc : process(p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_reg_pp0_iter7_tmp_36_i_reg_692)
    begin
                ap_block_state11_pp0_stage0_iter8 <= (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (p_dst_data_stream_0_V_full_n = ap_const_logic_0)));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, tmp_36_i_reg_692)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((tmp_36_i_reg_692 = ap_const_lv1_1) and (p_src_data_stream_0_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(tmp_36_i_fu_206_p2)
    begin
        if ((tmp_36_i_fu_206_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, tmp_i_fu_191_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_191_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_i_fu_191_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_i_fu_191_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_i23_i_fu_597_p2 <= (p_39_demorgan_i_not_i_1_fu_592_p2 or neg_src_not_i_i20_i_fu_582_p2);
    brmerge_i_i_i_fu_538_p2 <= (p_39_demorgan_i_not_i_fu_533_p2 or neg_src_not_i_i_i_fu_523_p2);
    brmerge_i_i_not_i_i2_fu_587_p2 <= (p_39_demorgan_i_i_i_reg_844 and neg_src_not_i_i20_i_fu_582_p2);
    brmerge_i_i_not_i_i_s_fu_528_p2 <= (p_39_demorgan_i_i_i_i_reg_826 and neg_src_not_i_i_i_fu_523_p2);
    carry_1_fu_473_p2 <= (tmp_18_fu_447_p3 and tmp_17_i_i10_i_fu_467_p2);
    carry_fu_409_p2 <= (tmp_17_i_i_i_fu_403_p2 and tmp_14_fu_383_p3);
    deleted_zeros_1_fu_489_p3 <= 
        Range1_all_ones_1_fu_479_p2 when (carry_1_fu_473_p2(0) = '1') else 
        Range1_all_zeros_1_fu_484_p2;
    deleted_zeros_fu_425_p3 <= 
        Range1_all_ones_fu_415_p2 when (carry_fu_409_p2(0) = '1') else 
        Range1_all_zeros_fu_420_p2;
    grp_fu_632_p0 <= grp_fu_632_p00(8 - 1 downto 0);
    grp_fu_632_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter2_tmp_25_reg_712),28));
    grp_fu_632_p1 <= ap_const_lv28_74BC6(20 - 1 downto 0);
    grp_fu_639_p0 <= grp_fu_639_p00(8 - 1 downto 0);
    grp_fu_639_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter3_tmp_24_reg_707),30));
    grp_fu_639_p1 <= ap_const_lv30_259168(23 - 1 downto 0);
    grp_fu_639_p2 <= grp_fu_639_p20(29 - 1 downto 0);
    grp_fu_639_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_2_reg_723),30));
    grp_fu_649_p1 <= ap_const_lv32_2DA1CA(23 - 1 downto 0);
    grp_fu_649_p2 <= ap_const_lv32_20000000(31 - 1 downto 0);
    grp_fu_661_p1 <= ap_const_lv32_241893(23 - 1 downto 0);
    grp_fu_661_p2 <= ap_const_lv32_20000000(31 - 1 downto 0);
    i_cast_i_cast_fu_187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_165),16));
    i_fu_196_p2 <= std_logic_vector(unsigned(i_i_reg_165) + unsigned(ap_const_lv11_1));
    i_op_assign_5_fu_295_p2 <= std_logic_vector(unsigned(tmp_30_cast_i_fu_288_p1) - unsigned(tmp_31_cast_i_fu_291_p1));
    i_op_assign_6_fu_304_p2 <= std_logic_vector(unsigned(tmp_33_cast_i_fu_301_p1) - unsigned(tmp_31_cast_i_fu_291_p1));
    j_cast_i_cast_fu_202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_176),16));
    j_fu_211_p2 <= std_logic_vector(unsigned(j_i_reg_176) + unsigned(ap_const_lv11_1));
    neg_src_4_fu_572_p2 <= (tmp_18_i_i16_i_fu_567_p2 and ap_reg_pp0_iter7_signbit_1_reg_791);
    neg_src_fu_513_p2 <= (tmp_18_i_i_i_fu_508_p2 and ap_reg_pp0_iter7_signbit_reg_763);
    neg_src_not_i_i20_i_fu_582_p2 <= (signbit_not_i19_i_fu_577_p2 or p_38_i_i_i15_i_reg_838);
    neg_src_not_i_i_i_fu_523_p2 <= (signbit_not_i_i_fu_518_p2 or p_38_i_i_i_i_reg_820);
    not_carry_i_fu_274_p2 <= (tmp_11_fu_260_p3 or p_Result_2_i_i_not_fu_268_p2);
    p_38_i_i_i15_i_fu_497_p2 <= (carry_1_fu_473_p2 and Range1_all_ones_1_fu_479_p2);
    p_38_i_i_i_i_fu_433_p2 <= (carry_fu_409_p2 and Range1_all_ones_fu_415_p2);
    p_39_demorgan_i_i_i_fu_503_p2 <= (signbit_1_reg_791 or deleted_zeros_1_fu_489_p3);
    p_39_demorgan_i_i_i_i_fu_439_p2 <= (signbit_reg_763 or deleted_zeros_fu_425_p3);
    p_39_demorgan_i_not_i_1_fu_592_p2 <= (p_39_demorgan_i_i_i_reg_844 xor ap_const_lv1_1);
    p_39_demorgan_i_not_i_fu_533_p2 <= (p_39_demorgan_i_i_i_i_reg_826 xor ap_const_lv1_1);
    p_Result_2_i_i_not_fu_268_p2 <= (tmp_10_fu_248_p3 xor ap_const_lv1_1);
    p_Val2_18_fu_454_p2 <= std_logic_vector(unsigned(p_Val2_16_reg_798) + unsigned(tmp_16_i_i6_i_fu_444_p1));
    p_Val2_20_fu_280_p3 <= 
        p_Val2_5_fu_255_p2 when (not_carry_i_fu_274_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_5_fu_255_p2 <= std_logic_vector(unsigned(p_Val2_4_reg_733) + unsigned(tmp_19_i_i_i_fu_245_p1));
    p_Val2_8_fu_390_p2 <= std_logic_vector(unsigned(p_Val2_7_reg_770) + unsigned(tmp_16_i_i_i_fu_380_p1));

    p_dst_data_stream_0_V_blk_n_assign_proc : process(p_dst_data_stream_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692)
    begin
        if (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            p_dst_data_stream_0_V_blk_n <= p_dst_data_stream_0_V_full_n;
        else 
            p_dst_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_0_V_din <= ap_reg_pp0_iter7_p_Val2_20_reg_743;

    p_dst_data_stream_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst_data_stream_1_V_blk_n_assign_proc : process(p_dst_data_stream_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692)
    begin
        if (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            p_dst_data_stream_1_V_blk_n <= p_dst_data_stream_1_V_full_n;
        else 
            p_dst_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_1_V_din <= 
        p_mux_i_i2_i_fu_544_p3 when (brmerge_i_i_i_fu_538_p2(0) = '1') else 
        p_i_i_i_fu_551_p3;

    p_dst_data_stream_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst_data_stream_2_V_blk_n_assign_proc : process(p_dst_data_stream_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692)
    begin
        if (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            p_dst_data_stream_2_V_blk_n <= p_dst_data_stream_2_V_full_n;
        else 
            p_dst_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_2_V_din <= 
        p_mux_i_i24_i_fu_603_p3 when (brmerge_i_i23_i_fu_597_p2(0) = '1') else 
        p_i_i25_i_fu_610_p3;

    p_dst_data_stream_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_tmp_36_i_reg_692, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter7_tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_2_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i25_i_fu_610_p3 <= 
        ap_const_lv8_0 when (neg_src_4_fu_572_p2(0) = '1') else 
        p_Val2_18_reg_832;
    p_i_i_i_fu_551_p3 <= 
        ap_const_lv8_0 when (neg_src_fu_513_p2(0) = '1') else 
        p_Val2_8_reg_814;
    p_mux_i_i24_i_fu_603_p3 <= 
        p_Val2_18_reg_832 when (brmerge_i_i_not_i_i2_fu_587_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_mux_i_i2_i_fu_544_p3 <= 
        p_Val2_8_reg_814 when (brmerge_i_i_not_i_i_s_fu_528_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_src_cols_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_0_V_blk_n_assign_proc : process(p_src_data_stream_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_36_i_reg_692)
    begin
        if (((tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_0_V_blk_n <= p_src_data_stream_0_V_empty_n;
        else 
            p_src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_36_i_reg_692, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_1_V_blk_n_assign_proc : process(p_src_data_stream_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_36_i_reg_692)
    begin
        if (((tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_1_V_blk_n <= p_src_data_stream_1_V_empty_n;
        else 
            p_src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_36_i_reg_692, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_2_V_blk_n_assign_proc : process(p_src_data_stream_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_36_i_reg_692)
    begin
        if (((tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_2_V_blk_n <= p_src_data_stream_2_V_empty_n;
        else 
            p_src_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_36_i_reg_692, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_36_i_reg_692 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_6_i_fu_626_p0 <= r_V_6_i_fu_626_p00(8 - 1 downto 0);
    r_V_6_i_fu_626_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_reg_701),29));
    r_V_6_i_fu_626_p1 <= ap_const_lv29_1322D0(22 - 1 downto 0);
    signbit_not_i19_i_fu_577_p2 <= (ap_reg_pp0_iter7_signbit_1_reg_791 xor ap_const_lv1_1);
    signbit_not_i_i_fu_518_p2 <= (ap_reg_pp0_iter7_signbit_reg_763 xor ap_const_lv1_1);
    tmp_10_fu_248_p3 <= r_V_1_reg_728(29 downto 29);
    tmp_11_fu_260_p3 <= p_Val2_5_fu_255_p2(7 downto 7);
    tmp_14_fu_383_p3 <= r_V_2_reg_758(29 downto 29);
    tmp_15_fu_395_p3 <= p_Val2_8_fu_390_p2(7 downto 7);
    tmp_16_i_i6_i_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_reg_803),8));
    tmp_16_i_i_i_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_775),8));
    tmp_17_i_i10_i_fu_467_p2 <= (tmp_19_fu_459_p3 xor ap_const_lv1_1);
    tmp_17_i_i_i_fu_403_p2 <= (tmp_15_fu_395_p3 xor ap_const_lv1_1);
    tmp_18_fu_447_p3 <= r_V_3_reg_786(29 downto 29);
    tmp_18_i_i16_i_fu_567_p2 <= (p_38_i_i_i15_i_reg_838 xor ap_const_lv1_1);
    tmp_18_i_i_i_fu_508_p2 <= (p_38_i_i_i_i_reg_820 xor ap_const_lv1_1);
    tmp_19_fu_459_p3 <= p_Val2_18_fu_454_p2(7 downto 7);
    tmp_19_i_i_i_fu_245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_738),8));
    tmp_30_cast_i_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter4_tmp_23_reg_701),9));
    tmp_31_cast_i_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_20_fu_280_p3),9));
    tmp_33_cast_i_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter4_tmp_25_reg_712),9));
    tmp_36_i_fu_206_p2 <= "1" when (unsigned(j_cast_i_cast_fu_202_p1) < unsigned(p_src_cols_V_read_reg_673)) else "0";
    tmp_i_fu_191_p2 <= "1" when (unsigned(i_cast_i_cast_fu_187_p1) < unsigned(p_src_rows_V_read_reg_678)) else "0";
end behav;

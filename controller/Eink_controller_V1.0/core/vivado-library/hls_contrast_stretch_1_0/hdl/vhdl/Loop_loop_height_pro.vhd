-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_loop_height_pro is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    max_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    max_empty_n : IN STD_LOGIC;
    max_read : OUT STD_LOGIC;
    p_rows_assign_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_rows_assign_cast_loc_empty_n : IN STD_LOGIC;
    p_rows_assign_cast_loc_read : OUT STD_LOGIC;
    p_cols_assign_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_cols_assign_cast_loc_empty_n : IN STD_LOGIC;
    p_cols_assign_cast_loc_read : OUT STD_LOGIC;
    img2_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img2_data_stream_0_V_full_n : IN STD_LOGIC;
    img2_data_stream_0_V_write : OUT STD_LOGIC;
    img2_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img2_data_stream_1_V_full_n : IN STD_LOGIC;
    img2_data_stream_1_V_write : OUT STD_LOGIC;
    img2_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img2_data_stream_2_V_full_n : IN STD_LOGIC;
    img2_data_stream_2_V_write : OUT STD_LOGIC;
    img1_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img1_data_stream_0_V_empty_n : IN STD_LOGIC;
    img1_data_stream_0_V_read : OUT STD_LOGIC;
    img1_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img1_data_stream_1_V_empty_n : IN STD_LOGIC;
    img1_data_stream_1_V_read : OUT STD_LOGIC;
    img1_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img1_data_stream_2_V_empty_n : IN STD_LOGIC;
    img1_data_stream_2_V_read : OUT STD_LOGIC;
    min_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    min_empty_n : IN STD_LOGIC;
    min_read : OUT STD_LOGIC;
    tmp_3_cast_loc_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    tmp_3_cast_loc_empty_n : IN STD_LOGIC;
    tmp_3_cast_loc_read : OUT STD_LOGIC );
end;


architecture behav of Loop_loop_height_pro is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal max_blk_n : STD_LOGIC;
    signal p_rows_assign_cast_loc_blk_n : STD_LOGIC;
    signal p_cols_assign_cast_loc_blk_n : STD_LOGIC;
    signal img2_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal img2_data_stream_1_V_blk_n : STD_LOGIC;
    signal img2_data_stream_2_V_blk_n : STD_LOGIC;
    signal img1_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal img1_data_stream_1_V_blk_n : STD_LOGIC;
    signal img1_data_stream_2_V_blk_n : STD_LOGIC;
    signal min_blk_n : STD_LOGIC;
    signal tmp_3_cast_loc_blk_n : STD_LOGIC;
    signal t_V_2_reg_162 : STD_LOGIC_VECTOR (10 downto 0);
    signal max_read_reg_279 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal min_read_reg_284 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_rows_assign_cast_lo_reg_289 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cols_assign_cast_lo_reg_294 : STD_LOGIC_VECTOR (11 downto 0);
    signal extLd_fu_189_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal extLd_reg_299 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_tr_cast_i_i_ca_fu_203_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_tr_cast_i_i_ca_reg_304 : STD_LOGIC_VECTOR (16 downto 0);
    signal exitcond51_i_i_i_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_216_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_313 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_exitcond_i_i_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_231_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_9_reg_327 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter10_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter11_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter12_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter13_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter14_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter15_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter16_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter17_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter18_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter19_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter20_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter21_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter22_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter23_tmp_8_reg_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter10_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter11_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter12_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter13_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter14_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter15_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter16_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter17_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter18_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter19_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter20_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter21_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter22_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter23_tmp_reg_339 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_i_i_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_tmp_1_i_i_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_tmp_i_i_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_i_fu_265_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_i_i_reg_352 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_fu_275_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal t_V_reg_151 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_phi_reg_pp0_iter0_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter10_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter11_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter12_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter13_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter15_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter16_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter17_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter18_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter19_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter20_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter21_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter22_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter23_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter24_tmp_2_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_cast_i_i_fu_193_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_tr_i_i_fu_197_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_cast_i_i_fu_207_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal t_V_1_cast_i_i_fu_222_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_cast_i_i_fu_245_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_i_i_fu_248_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_i_i_fu_257_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_cast_i_i_fu_253_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_271_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_271_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_362 : BOOLEAN;
    signal ap_condition_490 : BOOLEAN;

    component hls_contrast_strefYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    hls_contrast_strefYi_U47 : component hls_contrast_strefYi
    generic map (
        ID => 1,
        NUM_STAGE => 21,
        din0_WIDTH => 17,
        din1_WIDTH => 9,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_10_i_i_reg_352,
        din1 => grp_fu_271_p1,
        ce => grp_fu_271_ce,
        dout => grp_fu_271_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond51_i_i_i_fu_211_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond51_i_i_i_fu_211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                elsif (((exitcond51_i_i_i_fu_211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter24_tmp_2_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_362)) then 
                    ap_phi_reg_pp0_iter24_tmp_2_reg_173 <= tmp_7_fu_275_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter24_tmp_2_reg_173 <= ap_phi_reg_pp0_iter23_tmp_2_reg_173;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_tmp_2_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_490)) then 
                    ap_phi_reg_pp0_iter3_tmp_2_reg_173 <= ap_const_lv8_0;
                elsif (((ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (tmp_1_i_i_fu_237_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_tmp_2_reg_173 <= ap_const_lv8_FF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_tmp_2_reg_173 <= ap_phi_reg_pp0_iter2_tmp_2_reg_173;
                end if;
            end if; 
        end if;
    end process;

    t_V_2_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_162 <= j_V_fu_231_p2;
            elsif (((exitcond51_i_i_i_fu_211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_162 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                t_V_reg_151 <= i_V_reg_313;
            elsif ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_151 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_tmp_2_reg_173 <= ap_phi_reg_pp0_iter9_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_tmp_2_reg_173 <= ap_phi_reg_pp0_iter10_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter12_tmp_2_reg_173 <= ap_phi_reg_pp0_iter11_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter13_tmp_2_reg_173 <= ap_phi_reg_pp0_iter12_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter14_tmp_2_reg_173 <= ap_phi_reg_pp0_iter13_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter15_tmp_2_reg_173 <= ap_phi_reg_pp0_iter14_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter16_tmp_2_reg_173 <= ap_phi_reg_pp0_iter15_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter17_tmp_2_reg_173 <= ap_phi_reg_pp0_iter16_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter18_tmp_2_reg_173 <= ap_phi_reg_pp0_iter17_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter19_tmp_2_reg_173 <= ap_phi_reg_pp0_iter18_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_tmp_2_reg_173 <= ap_phi_reg_pp0_iter0_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter20_tmp_2_reg_173 <= ap_phi_reg_pp0_iter19_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter21_tmp_2_reg_173 <= ap_phi_reg_pp0_iter20_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter22_tmp_2_reg_173 <= ap_phi_reg_pp0_iter21_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter23_tmp_2_reg_173 <= ap_phi_reg_pp0_iter22_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_tmp_2_reg_173 <= ap_phi_reg_pp0_iter1_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_tmp_2_reg_173 <= ap_phi_reg_pp0_iter3_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_tmp_2_reg_173 <= ap_phi_reg_pp0_iter4_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_tmp_2_reg_173 <= ap_phi_reg_pp0_iter5_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_tmp_2_reg_173 <= ap_phi_reg_pp0_iter6_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_tmp_2_reg_173 <= ap_phi_reg_pp0_iter7_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_tmp_2_reg_173 <= ap_phi_reg_pp0_iter8_tmp_2_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter9_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter10_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter9_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter10_tmp_8_reg_334 <= ap_reg_pp0_iter9_tmp_8_reg_334;
                ap_reg_pp0_iter10_tmp_i_i_reg_348 <= ap_reg_pp0_iter9_tmp_i_i_reg_348;
                ap_reg_pp0_iter10_tmp_reg_339 <= ap_reg_pp0_iter9_tmp_reg_339;
                ap_reg_pp0_iter11_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter10_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter11_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter10_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter11_tmp_8_reg_334 <= ap_reg_pp0_iter10_tmp_8_reg_334;
                ap_reg_pp0_iter11_tmp_i_i_reg_348 <= ap_reg_pp0_iter10_tmp_i_i_reg_348;
                ap_reg_pp0_iter11_tmp_reg_339 <= ap_reg_pp0_iter10_tmp_reg_339;
                ap_reg_pp0_iter12_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter11_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter12_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter11_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter12_tmp_8_reg_334 <= ap_reg_pp0_iter11_tmp_8_reg_334;
                ap_reg_pp0_iter12_tmp_i_i_reg_348 <= ap_reg_pp0_iter11_tmp_i_i_reg_348;
                ap_reg_pp0_iter12_tmp_reg_339 <= ap_reg_pp0_iter11_tmp_reg_339;
                ap_reg_pp0_iter13_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter12_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter13_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter12_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter13_tmp_8_reg_334 <= ap_reg_pp0_iter12_tmp_8_reg_334;
                ap_reg_pp0_iter13_tmp_i_i_reg_348 <= ap_reg_pp0_iter12_tmp_i_i_reg_348;
                ap_reg_pp0_iter13_tmp_reg_339 <= ap_reg_pp0_iter12_tmp_reg_339;
                ap_reg_pp0_iter14_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter13_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter14_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter13_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter14_tmp_8_reg_334 <= ap_reg_pp0_iter13_tmp_8_reg_334;
                ap_reg_pp0_iter14_tmp_i_i_reg_348 <= ap_reg_pp0_iter13_tmp_i_i_reg_348;
                ap_reg_pp0_iter14_tmp_reg_339 <= ap_reg_pp0_iter13_tmp_reg_339;
                ap_reg_pp0_iter15_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter14_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter15_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter14_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter15_tmp_8_reg_334 <= ap_reg_pp0_iter14_tmp_8_reg_334;
                ap_reg_pp0_iter15_tmp_i_i_reg_348 <= ap_reg_pp0_iter14_tmp_i_i_reg_348;
                ap_reg_pp0_iter15_tmp_reg_339 <= ap_reg_pp0_iter14_tmp_reg_339;
                ap_reg_pp0_iter16_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter15_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter16_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter15_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter16_tmp_8_reg_334 <= ap_reg_pp0_iter15_tmp_8_reg_334;
                ap_reg_pp0_iter16_tmp_i_i_reg_348 <= ap_reg_pp0_iter15_tmp_i_i_reg_348;
                ap_reg_pp0_iter16_tmp_reg_339 <= ap_reg_pp0_iter15_tmp_reg_339;
                ap_reg_pp0_iter17_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter16_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter17_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter16_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter17_tmp_8_reg_334 <= ap_reg_pp0_iter16_tmp_8_reg_334;
                ap_reg_pp0_iter17_tmp_i_i_reg_348 <= ap_reg_pp0_iter16_tmp_i_i_reg_348;
                ap_reg_pp0_iter17_tmp_reg_339 <= ap_reg_pp0_iter16_tmp_reg_339;
                ap_reg_pp0_iter18_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter17_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter18_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter17_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter18_tmp_8_reg_334 <= ap_reg_pp0_iter17_tmp_8_reg_334;
                ap_reg_pp0_iter18_tmp_i_i_reg_348 <= ap_reg_pp0_iter17_tmp_i_i_reg_348;
                ap_reg_pp0_iter18_tmp_reg_339 <= ap_reg_pp0_iter17_tmp_reg_339;
                ap_reg_pp0_iter19_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter18_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter19_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter18_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter19_tmp_8_reg_334 <= ap_reg_pp0_iter18_tmp_8_reg_334;
                ap_reg_pp0_iter19_tmp_i_i_reg_348 <= ap_reg_pp0_iter18_tmp_i_i_reg_348;
                ap_reg_pp0_iter19_tmp_reg_339 <= ap_reg_pp0_iter18_tmp_reg_339;
                ap_reg_pp0_iter20_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter19_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter20_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter19_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter20_tmp_8_reg_334 <= ap_reg_pp0_iter19_tmp_8_reg_334;
                ap_reg_pp0_iter20_tmp_i_i_reg_348 <= ap_reg_pp0_iter19_tmp_i_i_reg_348;
                ap_reg_pp0_iter20_tmp_reg_339 <= ap_reg_pp0_iter19_tmp_reg_339;
                ap_reg_pp0_iter21_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter20_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter21_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter20_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter21_tmp_8_reg_334 <= ap_reg_pp0_iter20_tmp_8_reg_334;
                ap_reg_pp0_iter21_tmp_i_i_reg_348 <= ap_reg_pp0_iter20_tmp_i_i_reg_348;
                ap_reg_pp0_iter21_tmp_reg_339 <= ap_reg_pp0_iter20_tmp_reg_339;
                ap_reg_pp0_iter22_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter21_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter22_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter21_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter22_tmp_8_reg_334 <= ap_reg_pp0_iter21_tmp_8_reg_334;
                ap_reg_pp0_iter22_tmp_i_i_reg_348 <= ap_reg_pp0_iter21_tmp_i_i_reg_348;
                ap_reg_pp0_iter22_tmp_reg_339 <= ap_reg_pp0_iter21_tmp_reg_339;
                ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter22_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter23_tmp_8_reg_334 <= ap_reg_pp0_iter22_tmp_8_reg_334;
                ap_reg_pp0_iter23_tmp_reg_339 <= ap_reg_pp0_iter22_tmp_reg_339;
                ap_reg_pp0_iter2_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter1_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter2_tmp_8_reg_334 <= tmp_8_reg_334;
                ap_reg_pp0_iter2_tmp_reg_339 <= tmp_reg_339;
                ap_reg_pp0_iter3_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter2_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter3_tmp_1_i_i_reg_344 <= tmp_1_i_i_reg_344;
                ap_reg_pp0_iter3_tmp_8_reg_334 <= ap_reg_pp0_iter2_tmp_8_reg_334;
                ap_reg_pp0_iter3_tmp_i_i_reg_348 <= tmp_i_i_reg_348;
                ap_reg_pp0_iter3_tmp_reg_339 <= ap_reg_pp0_iter2_tmp_reg_339;
                ap_reg_pp0_iter4_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter3_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter4_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter3_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter4_tmp_8_reg_334 <= ap_reg_pp0_iter3_tmp_8_reg_334;
                ap_reg_pp0_iter4_tmp_i_i_reg_348 <= ap_reg_pp0_iter3_tmp_i_i_reg_348;
                ap_reg_pp0_iter4_tmp_reg_339 <= ap_reg_pp0_iter3_tmp_reg_339;
                ap_reg_pp0_iter5_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter4_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter5_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter4_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter5_tmp_8_reg_334 <= ap_reg_pp0_iter4_tmp_8_reg_334;
                ap_reg_pp0_iter5_tmp_i_i_reg_348 <= ap_reg_pp0_iter4_tmp_i_i_reg_348;
                ap_reg_pp0_iter5_tmp_reg_339 <= ap_reg_pp0_iter4_tmp_reg_339;
                ap_reg_pp0_iter6_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter5_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter6_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter5_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter6_tmp_8_reg_334 <= ap_reg_pp0_iter5_tmp_8_reg_334;
                ap_reg_pp0_iter6_tmp_i_i_reg_348 <= ap_reg_pp0_iter5_tmp_i_i_reg_348;
                ap_reg_pp0_iter6_tmp_reg_339 <= ap_reg_pp0_iter5_tmp_reg_339;
                ap_reg_pp0_iter7_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter6_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter7_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter6_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter7_tmp_8_reg_334 <= ap_reg_pp0_iter6_tmp_8_reg_334;
                ap_reg_pp0_iter7_tmp_i_i_reg_348 <= ap_reg_pp0_iter6_tmp_i_i_reg_348;
                ap_reg_pp0_iter7_tmp_reg_339 <= ap_reg_pp0_iter6_tmp_reg_339;
                ap_reg_pp0_iter8_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter7_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter8_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter7_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter8_tmp_8_reg_334 <= ap_reg_pp0_iter7_tmp_8_reg_334;
                ap_reg_pp0_iter8_tmp_i_i_reg_348 <= ap_reg_pp0_iter7_tmp_i_i_reg_348;
                ap_reg_pp0_iter8_tmp_reg_339 <= ap_reg_pp0_iter7_tmp_reg_339;
                ap_reg_pp0_iter9_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter8_exitcond_i_i_i_reg_318;
                ap_reg_pp0_iter9_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter8_tmp_1_i_i_reg_344;
                ap_reg_pp0_iter9_tmp_8_reg_334 <= ap_reg_pp0_iter8_tmp_8_reg_334;
                ap_reg_pp0_iter9_tmp_i_i_reg_348 <= ap_reg_pp0_iter8_tmp_i_i_reg_348;
                ap_reg_pp0_iter9_tmp_reg_339 <= ap_reg_pp0_iter8_tmp_reg_339;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 <= exitcond_i_i_i_reg_318;
                exitcond_i_i_i_reg_318 <= exitcond_i_i_i_fu_226_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    extLd_reg_299(7 downto 0) <= extLd_fu_189_p1(7 downto 0);
                max_read_reg_279 <= max_dout;
                min_read_reg_284 <= min_dout;
                p_cols_assign_cast_lo_reg_294 <= p_cols_assign_cast_loc_dout;
                p_rows_assign_cast_lo_reg_289 <= p_rows_assign_cast_loc_dout;
                tmp_8_tr_cast_i_i_ca_reg_304 <= tmp_8_tr_cast_i_i_ca_fu_203_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_313 <= i_V_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_fu_241_p2 = ap_const_lv1_0) and (tmp_1_i_i_fu_237_p2 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_10_i_i_reg_352 <= tmp_10_i_i_fu_265_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_1_i_i_reg_344 <= tmp_1_i_i_fu_237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_8_reg_334 <= img1_data_stream_1_V_dout;
                tmp_9_reg_327 <= img1_data_stream_0_V_dout;
                tmp_reg_339 <= img1_data_stream_2_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_i_i_fu_237_p2 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_i_reg_348 <= tmp_i_i_fu_241_p2;
            end if;
        end if;
    end process;
    extLd_reg_299(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, max_empty_n, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, min_empty_n, tmp_3_cast_loc_empty_n, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter1, exitcond51_i_i_i_fu_211_p2, ap_CS_fsm_state2, exitcond_i_i_i_fu_226_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter23)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond51_i_i_i_fu_211_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_i_fu_226_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_i_fu_226_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state28 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, ap_enable_reg_pp0_iter24, exitcond_i_i_i_reg_318, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_0_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_0_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, ap_enable_reg_pp0_iter24, exitcond_i_i_i_reg_318, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_0_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_0_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, ap_enable_reg_pp0_iter24, exitcond_i_i_i_reg_318, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_0_V_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_0_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, max_empty_n, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, min_empty_n, tmp_3_cast_loc_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state27_pp0_stage0_iter24_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318)
    begin
                ap_block_state27_pp0_stage0_iter24 <= (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_2_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img2_data_stream_0_V_full_n = ap_const_logic_0)));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, exitcond_i_i_i_reg_318)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (img1_data_stream_0_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_362_assign_proc : process(ap_reg_pp0_iter22_exitcond_i_i_i_reg_318, ap_reg_pp0_iter22_tmp_1_i_i_reg_344, ap_reg_pp0_iter22_tmp_i_i_reg_348)
    begin
                ap_condition_362 <= ((ap_reg_pp0_iter22_tmp_i_i_reg_348 = ap_const_lv1_0) and (ap_reg_pp0_iter22_tmp_1_i_i_reg_344 = ap_const_lv1_0) and (ap_reg_pp0_iter22_exitcond_i_i_i_reg_318 = ap_const_lv1_0));
    end process;


    ap_condition_490_assign_proc : process(ap_reg_pp0_iter1_exitcond_i_i_i_reg_318, tmp_1_i_i_fu_237_p2, tmp_i_i_fu_241_p2)
    begin
                ap_condition_490 <= ((tmp_1_i_i_fu_237_p2 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (tmp_i_i_fu_241_p2 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_i_i_i_fu_226_p2)
    begin
        if ((exitcond_i_i_i_fu_226_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond51_i_i_i_fu_211_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond51_i_i_i_fu_211_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_2_reg_173 <= "XXXXXXXX";

    ap_ready_assign_proc : process(exitcond51_i_i_i_fu_211_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond51_i_i_i_fu_211_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond51_i_i_i_fu_211_p2 <= "1" when (t_V_cast_i_i_fu_207_p1 = p_rows_assign_cast_lo_reg_289) else "0";
    exitcond_i_i_i_fu_226_p2 <= "1" when (t_V_1_cast_i_i_fu_222_p1 = p_cols_assign_cast_lo_reg_294) else "0";
    extLd_fu_189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_cast_loc_dout),9));

    grp_fu_271_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_271_ce <= ap_const_logic_1;
        else 
            grp_fu_271_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_271_p1 <= tmp_8_tr_cast_i_i_ca_reg_304(9 - 1 downto 0);
    i_V_fu_216_p2 <= std_logic_vector(unsigned(t_V_reg_151) + unsigned(ap_const_lv11_1));

    img1_data_stream_0_V_blk_n_assign_proc : process(img1_data_stream_0_V_empty_n, ap_block_pp0_stage0, exitcond_i_i_i_reg_318, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img1_data_stream_0_V_blk_n <= img1_data_stream_0_V_empty_n;
        else 
            img1_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img1_data_stream_0_V_read_assign_proc : process(exitcond_i_i_i_reg_318, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img1_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img1_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_1_V_blk_n_assign_proc : process(img1_data_stream_1_V_empty_n, ap_block_pp0_stage0, exitcond_i_i_i_reg_318, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img1_data_stream_1_V_blk_n <= img1_data_stream_1_V_empty_n;
        else 
            img1_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img1_data_stream_1_V_read_assign_proc : process(exitcond_i_i_i_reg_318, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img1_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img1_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_2_V_blk_n_assign_proc : process(img1_data_stream_2_V_empty_n, ap_block_pp0_stage0, exitcond_i_i_i_reg_318, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img1_data_stream_2_V_blk_n <= img1_data_stream_2_V_empty_n;
        else 
            img1_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img1_data_stream_2_V_read_assign_proc : process(exitcond_i_i_i_reg_318, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img1_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img1_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_0_V_blk_n_assign_proc : process(img2_data_stream_0_V_full_n, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318)
    begin
        if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1))) then 
            img2_data_stream_0_V_blk_n <= img2_data_stream_0_V_full_n;
        else 
            img2_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img2_data_stream_0_V_din <= ap_phi_reg_pp0_iter24_tmp_2_reg_173;

    img2_data_stream_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter24, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img2_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img2_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_1_V_blk_n_assign_proc : process(img2_data_stream_1_V_full_n, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318)
    begin
        if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1))) then 
            img2_data_stream_1_V_blk_n <= img2_data_stream_1_V_full_n;
        else 
            img2_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img2_data_stream_1_V_din <= ap_reg_pp0_iter23_tmp_8_reg_334;

    img2_data_stream_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter24, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img2_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img2_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_2_V_blk_n_assign_proc : process(img2_data_stream_2_V_full_n, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318)
    begin
        if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1))) then 
            img2_data_stream_2_V_blk_n <= img2_data_stream_2_V_full_n;
        else 
            img2_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img2_data_stream_2_V_din <= ap_reg_pp0_iter23_tmp_reg_339;

    img2_data_stream_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter24, ap_reg_pp0_iter23_exitcond_i_i_i_reg_318, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img2_data_stream_2_V_write <= ap_const_logic_1;
        else 
            img2_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_231_p2 <= std_logic_vector(unsigned(t_V_2_reg_162) + unsigned(ap_const_lv11_1));

    max_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, max_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            max_blk_n <= max_empty_n;
        else 
            max_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    max_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, max_empty_n, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, min_empty_n, tmp_3_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            max_read <= ap_const_logic_1;
        else 
            max_read <= ap_const_logic_0;
        end if; 
    end process;


    min_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, min_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            min_blk_n <= min_empty_n;
        else 
            min_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    min_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, max_empty_n, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, min_empty_n, tmp_3_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            min_read <= ap_const_logic_1;
        else 
            min_read <= ap_const_logic_0;
        end if; 
    end process;


    p_cols_assign_cast_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_cols_assign_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_cols_assign_cast_loc_blk_n <= p_cols_assign_cast_loc_empty_n;
        else 
            p_cols_assign_cast_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_cols_assign_cast_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, max_empty_n, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, min_empty_n, tmp_3_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_cols_assign_cast_loc_read <= ap_const_logic_1;
        else 
            p_cols_assign_cast_loc_read <= ap_const_logic_0;
        end if; 
    end process;


    p_rows_assign_cast_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_rows_assign_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_rows_assign_cast_loc_blk_n <= p_rows_assign_cast_loc_empty_n;
        else 
            p_rows_assign_cast_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_rows_assign_cast_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, max_empty_n, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, min_empty_n, tmp_3_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_rows_assign_cast_loc_read <= ap_const_logic_1;
        else 
            p_rows_assign_cast_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    p_shl_i_i_fu_257_p3 <= (tmp_9_i_i_fu_248_p2 & ap_const_lv8_0);
    t_V_1_cast_i_i_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_162),12));
    t_V_cast_i_i_fu_207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_151),12));
    tmp_10_i_i_fu_265_p2 <= std_logic_vector(unsigned(p_shl_i_i_fu_257_p3) - unsigned(tmp_9_cast_i_i_fu_253_p1));
    tmp_1_i_i_fu_237_p2 <= "1" when (unsigned(tmp_9_reg_327) > unsigned(max_read_reg_279)) else "0";

    tmp_3_cast_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, tmp_3_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            tmp_3_cast_loc_blk_n <= tmp_3_cast_loc_empty_n;
        else 
            tmp_3_cast_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tmp_3_cast_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, max_empty_n, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, min_empty_n, tmp_3_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (tmp_3_cast_loc_empty_n = ap_const_logic_0) or (min_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (max_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            tmp_3_cast_loc_read <= ap_const_logic_1;
        else 
            tmp_3_cast_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_7_fu_275_p1 <= grp_fu_271_p2(8 - 1 downto 0);
    tmp_8_cast_i_i_fu_245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_327),9));
        tmp_8_tr_cast_i_i_ca_fu_203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_tr_i_i_fu_197_p2),17));

    tmp_8_tr_i_i_fu_197_p2 <= std_logic_vector(unsigned(tmp_cast_i_i_fu_193_p1) - unsigned(extLd_fu_189_p1));
        tmp_9_cast_i_i_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_i_i_fu_248_p2),17));

    tmp_9_i_i_fu_248_p2 <= std_logic_vector(unsigned(tmp_8_cast_i_i_fu_245_p1) - unsigned(extLd_reg_299));
    tmp_cast_i_i_fu_193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(max_dout),9));
    tmp_i_i_fu_241_p2 <= "1" when (unsigned(tmp_9_reg_327) < unsigned(min_read_reg_284)) else "0";
end behav;

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_loop_height_pro (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        max_dout,
        max_empty_n,
        max_read,
        p_rows_assign_cast_loc_dout,
        p_rows_assign_cast_loc_empty_n,
        p_rows_assign_cast_loc_read,
        p_cols_assign_cast_loc_dout,
        p_cols_assign_cast_loc_empty_n,
        p_cols_assign_cast_loc_read,
        img2_data_stream_0_V_din,
        img2_data_stream_0_V_full_n,
        img2_data_stream_0_V_write,
        img2_data_stream_1_V_din,
        img2_data_stream_1_V_full_n,
        img2_data_stream_1_V_write,
        img2_data_stream_2_V_din,
        img2_data_stream_2_V_full_n,
        img2_data_stream_2_V_write,
        img1_data_stream_0_V_dout,
        img1_data_stream_0_V_empty_n,
        img1_data_stream_0_V_read,
        img1_data_stream_1_V_dout,
        img1_data_stream_1_V_empty_n,
        img1_data_stream_1_V_read,
        img1_data_stream_2_V_dout,
        img1_data_stream_2_V_empty_n,
        img1_data_stream_2_V_read,
        min_dout,
        min_empty_n,
        min_read,
        tmp_3_cast_loc_dout,
        tmp_3_cast_loc_empty_n,
        tmp_3_cast_loc_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state28 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] max_dout;
input   max_empty_n;
output   max_read;
input  [11:0] p_rows_assign_cast_loc_dout;
input   p_rows_assign_cast_loc_empty_n;
output   p_rows_assign_cast_loc_read;
input  [11:0] p_cols_assign_cast_loc_dout;
input   p_cols_assign_cast_loc_empty_n;
output   p_cols_assign_cast_loc_read;
output  [7:0] img2_data_stream_0_V_din;
input   img2_data_stream_0_V_full_n;
output   img2_data_stream_0_V_write;
output  [7:0] img2_data_stream_1_V_din;
input   img2_data_stream_1_V_full_n;
output   img2_data_stream_1_V_write;
output  [7:0] img2_data_stream_2_V_din;
input   img2_data_stream_2_V_full_n;
output   img2_data_stream_2_V_write;
input  [7:0] img1_data_stream_0_V_dout;
input   img1_data_stream_0_V_empty_n;
output   img1_data_stream_0_V_read;
input  [7:0] img1_data_stream_1_V_dout;
input   img1_data_stream_1_V_empty_n;
output   img1_data_stream_1_V_read;
input  [7:0] img1_data_stream_2_V_dout;
input   img1_data_stream_2_V_empty_n;
output   img1_data_stream_2_V_read;
input  [7:0] min_dout;
input   min_empty_n;
output   min_read;
input  [7:0] tmp_3_cast_loc_dout;
input   tmp_3_cast_loc_empty_n;
output   tmp_3_cast_loc_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg max_read;
reg p_rows_assign_cast_loc_read;
reg p_cols_assign_cast_loc_read;
reg img2_data_stream_0_V_write;
reg img2_data_stream_1_V_write;
reg img2_data_stream_2_V_write;
reg img1_data_stream_0_V_read;
reg img1_data_stream_1_V_read;
reg img1_data_stream_2_V_read;
reg min_read;
reg tmp_3_cast_loc_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    max_blk_n;
reg    p_rows_assign_cast_loc_blk_n;
reg    p_cols_assign_cast_loc_blk_n;
reg    img2_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter24;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter23_exitcond_i_i_i_reg_318;
reg    img2_data_stream_1_V_blk_n;
reg    img2_data_stream_2_V_blk_n;
reg    img1_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    img1_data_stream_1_V_blk_n;
reg    img1_data_stream_2_V_blk_n;
reg    min_blk_n;
reg    tmp_3_cast_loc_blk_n;
reg   [10:0] t_V_2_reg_162;
reg   [7:0] max_read_reg_279;
reg    ap_block_state1;
reg   [7:0] min_read_reg_284;
reg   [11:0] p_rows_assign_cast_lo_reg_289;
reg   [11:0] p_cols_assign_cast_lo_reg_294;
wire   [8:0] extLd_fu_189_p1;
reg   [8:0] extLd_reg_299;
wire  signed [16:0] tmp_8_tr_cast_i_i_ca_fu_203_p1;
reg  signed [16:0] tmp_8_tr_cast_i_i_ca_reg_304;
wire   [0:0] exitcond51_i_i_i_fu_211_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_216_p2;
reg   [10:0] i_V_reg_313;
wire   [0:0] exitcond_i_i_i_fu_226_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
reg    ap_block_state27_pp0_stage0_iter24;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter2_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter3_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter4_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter5_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter6_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter7_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter8_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter9_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter10_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter11_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter12_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter13_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter14_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter15_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter16_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter17_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter18_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter19_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter20_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter21_exitcond_i_i_i_reg_318;
reg   [0:0] ap_reg_pp0_iter22_exitcond_i_i_i_reg_318;
wire   [10:0] j_V_fu_231_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_9_reg_327;
reg   [7:0] tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter2_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter3_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter4_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter5_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter6_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter7_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter8_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter9_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter10_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter11_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter12_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter13_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter14_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter15_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter16_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter17_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter18_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter19_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter20_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter21_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter22_tmp_8_reg_334;
reg   [7:0] ap_reg_pp0_iter23_tmp_8_reg_334;
reg   [7:0] tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter2_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter3_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter4_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter5_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter6_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter7_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter8_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter9_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter10_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter11_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter12_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter13_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter14_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter15_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter16_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter17_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter18_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter19_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter20_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter21_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter22_tmp_reg_339;
reg   [7:0] ap_reg_pp0_iter23_tmp_reg_339;
wire   [0:0] tmp_1_i_i_fu_237_p2;
reg   [0:0] tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter3_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter4_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter5_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter6_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter7_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter8_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter9_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter10_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter11_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter12_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter13_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter14_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter15_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter16_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter17_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter18_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter19_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter20_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter21_tmp_1_i_i_reg_344;
reg   [0:0] ap_reg_pp0_iter22_tmp_1_i_i_reg_344;
wire   [0:0] tmp_i_i_fu_241_p2;
reg   [0:0] tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter3_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter4_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter5_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter6_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter7_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter8_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter9_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter10_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter11_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter12_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter13_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter14_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter15_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter16_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter17_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter18_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter19_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter20_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter21_tmp_i_i_reg_348;
reg   [0:0] ap_reg_pp0_iter22_tmp_i_i_reg_348;
wire   [16:0] tmp_10_i_i_fu_265_p2;
reg   [16:0] tmp_10_i_i_reg_352;
wire   [7:0] tmp_7_fu_275_p1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg   [10:0] t_V_reg_151;
wire    ap_CS_fsm_state28;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter3_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter4_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter5_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter6_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter7_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter8_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter9_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter10_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter11_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter12_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter13_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter14_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter15_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter16_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter17_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter18_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter19_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter20_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter21_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter22_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter23_tmp_2_reg_173;
reg   [7:0] ap_phi_reg_pp0_iter24_tmp_2_reg_173;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_cast_i_i_fu_193_p1;
wire   [8:0] tmp_8_tr_i_i_fu_197_p2;
wire   [11:0] t_V_cast_i_i_fu_207_p1;
wire   [11:0] t_V_1_cast_i_i_fu_222_p1;
wire   [8:0] tmp_8_cast_i_i_fu_245_p1;
wire   [8:0] tmp_9_i_i_fu_248_p2;
wire   [16:0] p_shl_i_i_fu_257_p3;
wire  signed [16:0] tmp_9_cast_i_i_fu_253_p1;
wire  signed [8:0] grp_fu_271_p1;
wire   [7:0] grp_fu_271_p2;
reg    grp_fu_271_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_362;
reg    ap_condition_490;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
end

hls_contrast_strefYi #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
hls_contrast_strefYi_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_10_i_i_reg_352),
    .din1(grp_fu_271_p1),
    .ce(grp_fu_271_ce),
    .dout(grp_fu_271_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond51_i_i_i_fu_211_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond51_i_i_i_fu_211_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end else if (((exitcond51_i_i_i_fu_211_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter24 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_362)) begin
            ap_phi_reg_pp0_iter24_tmp_2_reg_173 <= tmp_7_fu_275_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter24_tmp_2_reg_173 <= ap_phi_reg_pp0_iter23_tmp_2_reg_173;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_490)) begin
            ap_phi_reg_pp0_iter3_tmp_2_reg_173 <= 8'd0;
        end else if (((ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 == 1'd0) & (tmp_1_i_i_fu_237_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter3_tmp_2_reg_173 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_tmp_2_reg_173 <= ap_phi_reg_pp0_iter2_tmp_2_reg_173;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_162 <= j_V_fu_231_p2;
    end else if (((exitcond51_i_i_i_fu_211_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_162 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        t_V_reg_151 <= i_V_reg_313;
    end else if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_151 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_tmp_2_reg_173 <= ap_phi_reg_pp0_iter9_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_tmp_2_reg_173 <= ap_phi_reg_pp0_iter10_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_tmp_2_reg_173 <= ap_phi_reg_pp0_iter11_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_tmp_2_reg_173 <= ap_phi_reg_pp0_iter12_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_tmp_2_reg_173 <= ap_phi_reg_pp0_iter13_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_tmp_2_reg_173 <= ap_phi_reg_pp0_iter14_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_tmp_2_reg_173 <= ap_phi_reg_pp0_iter15_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_tmp_2_reg_173 <= ap_phi_reg_pp0_iter16_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_tmp_2_reg_173 <= ap_phi_reg_pp0_iter17_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_tmp_2_reg_173 <= ap_phi_reg_pp0_iter18_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_tmp_2_reg_173 <= ap_phi_reg_pp0_iter0_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_tmp_2_reg_173 <= ap_phi_reg_pp0_iter19_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_tmp_2_reg_173 <= ap_phi_reg_pp0_iter20_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_tmp_2_reg_173 <= ap_phi_reg_pp0_iter21_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_tmp_2_reg_173 <= ap_phi_reg_pp0_iter22_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_tmp_2_reg_173 <= ap_phi_reg_pp0_iter1_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_tmp_2_reg_173 <= ap_phi_reg_pp0_iter3_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_tmp_2_reg_173 <= ap_phi_reg_pp0_iter4_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_tmp_2_reg_173 <= ap_phi_reg_pp0_iter5_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_tmp_2_reg_173 <= ap_phi_reg_pp0_iter6_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_tmp_2_reg_173 <= ap_phi_reg_pp0_iter7_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_tmp_2_reg_173 <= ap_phi_reg_pp0_iter8_tmp_2_reg_173;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter9_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter10_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter9_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter10_tmp_8_reg_334 <= ap_reg_pp0_iter9_tmp_8_reg_334;
        ap_reg_pp0_iter10_tmp_i_i_reg_348 <= ap_reg_pp0_iter9_tmp_i_i_reg_348;
        ap_reg_pp0_iter10_tmp_reg_339 <= ap_reg_pp0_iter9_tmp_reg_339;
        ap_reg_pp0_iter11_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter10_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter11_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter10_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter11_tmp_8_reg_334 <= ap_reg_pp0_iter10_tmp_8_reg_334;
        ap_reg_pp0_iter11_tmp_i_i_reg_348 <= ap_reg_pp0_iter10_tmp_i_i_reg_348;
        ap_reg_pp0_iter11_tmp_reg_339 <= ap_reg_pp0_iter10_tmp_reg_339;
        ap_reg_pp0_iter12_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter11_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter12_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter11_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter12_tmp_8_reg_334 <= ap_reg_pp0_iter11_tmp_8_reg_334;
        ap_reg_pp0_iter12_tmp_i_i_reg_348 <= ap_reg_pp0_iter11_tmp_i_i_reg_348;
        ap_reg_pp0_iter12_tmp_reg_339 <= ap_reg_pp0_iter11_tmp_reg_339;
        ap_reg_pp0_iter13_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter12_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter13_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter12_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter13_tmp_8_reg_334 <= ap_reg_pp0_iter12_tmp_8_reg_334;
        ap_reg_pp0_iter13_tmp_i_i_reg_348 <= ap_reg_pp0_iter12_tmp_i_i_reg_348;
        ap_reg_pp0_iter13_tmp_reg_339 <= ap_reg_pp0_iter12_tmp_reg_339;
        ap_reg_pp0_iter14_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter13_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter14_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter13_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter14_tmp_8_reg_334 <= ap_reg_pp0_iter13_tmp_8_reg_334;
        ap_reg_pp0_iter14_tmp_i_i_reg_348 <= ap_reg_pp0_iter13_tmp_i_i_reg_348;
        ap_reg_pp0_iter14_tmp_reg_339 <= ap_reg_pp0_iter13_tmp_reg_339;
        ap_reg_pp0_iter15_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter14_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter15_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter14_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter15_tmp_8_reg_334 <= ap_reg_pp0_iter14_tmp_8_reg_334;
        ap_reg_pp0_iter15_tmp_i_i_reg_348 <= ap_reg_pp0_iter14_tmp_i_i_reg_348;
        ap_reg_pp0_iter15_tmp_reg_339 <= ap_reg_pp0_iter14_tmp_reg_339;
        ap_reg_pp0_iter16_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter15_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter16_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter15_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter16_tmp_8_reg_334 <= ap_reg_pp0_iter15_tmp_8_reg_334;
        ap_reg_pp0_iter16_tmp_i_i_reg_348 <= ap_reg_pp0_iter15_tmp_i_i_reg_348;
        ap_reg_pp0_iter16_tmp_reg_339 <= ap_reg_pp0_iter15_tmp_reg_339;
        ap_reg_pp0_iter17_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter16_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter17_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter16_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter17_tmp_8_reg_334 <= ap_reg_pp0_iter16_tmp_8_reg_334;
        ap_reg_pp0_iter17_tmp_i_i_reg_348 <= ap_reg_pp0_iter16_tmp_i_i_reg_348;
        ap_reg_pp0_iter17_tmp_reg_339 <= ap_reg_pp0_iter16_tmp_reg_339;
        ap_reg_pp0_iter18_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter17_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter18_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter17_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter18_tmp_8_reg_334 <= ap_reg_pp0_iter17_tmp_8_reg_334;
        ap_reg_pp0_iter18_tmp_i_i_reg_348 <= ap_reg_pp0_iter17_tmp_i_i_reg_348;
        ap_reg_pp0_iter18_tmp_reg_339 <= ap_reg_pp0_iter17_tmp_reg_339;
        ap_reg_pp0_iter19_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter18_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter19_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter18_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter19_tmp_8_reg_334 <= ap_reg_pp0_iter18_tmp_8_reg_334;
        ap_reg_pp0_iter19_tmp_i_i_reg_348 <= ap_reg_pp0_iter18_tmp_i_i_reg_348;
        ap_reg_pp0_iter19_tmp_reg_339 <= ap_reg_pp0_iter18_tmp_reg_339;
        ap_reg_pp0_iter20_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter19_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter20_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter19_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter20_tmp_8_reg_334 <= ap_reg_pp0_iter19_tmp_8_reg_334;
        ap_reg_pp0_iter20_tmp_i_i_reg_348 <= ap_reg_pp0_iter19_tmp_i_i_reg_348;
        ap_reg_pp0_iter20_tmp_reg_339 <= ap_reg_pp0_iter19_tmp_reg_339;
        ap_reg_pp0_iter21_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter20_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter21_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter20_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter21_tmp_8_reg_334 <= ap_reg_pp0_iter20_tmp_8_reg_334;
        ap_reg_pp0_iter21_tmp_i_i_reg_348 <= ap_reg_pp0_iter20_tmp_i_i_reg_348;
        ap_reg_pp0_iter21_tmp_reg_339 <= ap_reg_pp0_iter20_tmp_reg_339;
        ap_reg_pp0_iter22_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter21_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter22_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter21_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter22_tmp_8_reg_334 <= ap_reg_pp0_iter21_tmp_8_reg_334;
        ap_reg_pp0_iter22_tmp_i_i_reg_348 <= ap_reg_pp0_iter21_tmp_i_i_reg_348;
        ap_reg_pp0_iter22_tmp_reg_339 <= ap_reg_pp0_iter21_tmp_reg_339;
        ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter22_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter23_tmp_8_reg_334 <= ap_reg_pp0_iter22_tmp_8_reg_334;
        ap_reg_pp0_iter23_tmp_reg_339 <= ap_reg_pp0_iter22_tmp_reg_339;
        ap_reg_pp0_iter2_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter1_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter2_tmp_8_reg_334 <= tmp_8_reg_334;
        ap_reg_pp0_iter2_tmp_reg_339 <= tmp_reg_339;
        ap_reg_pp0_iter3_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter2_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter3_tmp_1_i_i_reg_344 <= tmp_1_i_i_reg_344;
        ap_reg_pp0_iter3_tmp_8_reg_334 <= ap_reg_pp0_iter2_tmp_8_reg_334;
        ap_reg_pp0_iter3_tmp_i_i_reg_348 <= tmp_i_i_reg_348;
        ap_reg_pp0_iter3_tmp_reg_339 <= ap_reg_pp0_iter2_tmp_reg_339;
        ap_reg_pp0_iter4_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter3_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter4_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter3_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter4_tmp_8_reg_334 <= ap_reg_pp0_iter3_tmp_8_reg_334;
        ap_reg_pp0_iter4_tmp_i_i_reg_348 <= ap_reg_pp0_iter3_tmp_i_i_reg_348;
        ap_reg_pp0_iter4_tmp_reg_339 <= ap_reg_pp0_iter3_tmp_reg_339;
        ap_reg_pp0_iter5_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter4_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter5_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter4_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter5_tmp_8_reg_334 <= ap_reg_pp0_iter4_tmp_8_reg_334;
        ap_reg_pp0_iter5_tmp_i_i_reg_348 <= ap_reg_pp0_iter4_tmp_i_i_reg_348;
        ap_reg_pp0_iter5_tmp_reg_339 <= ap_reg_pp0_iter4_tmp_reg_339;
        ap_reg_pp0_iter6_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter5_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter6_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter5_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter6_tmp_8_reg_334 <= ap_reg_pp0_iter5_tmp_8_reg_334;
        ap_reg_pp0_iter6_tmp_i_i_reg_348 <= ap_reg_pp0_iter5_tmp_i_i_reg_348;
        ap_reg_pp0_iter6_tmp_reg_339 <= ap_reg_pp0_iter5_tmp_reg_339;
        ap_reg_pp0_iter7_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter6_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter7_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter6_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter7_tmp_8_reg_334 <= ap_reg_pp0_iter6_tmp_8_reg_334;
        ap_reg_pp0_iter7_tmp_i_i_reg_348 <= ap_reg_pp0_iter6_tmp_i_i_reg_348;
        ap_reg_pp0_iter7_tmp_reg_339 <= ap_reg_pp0_iter6_tmp_reg_339;
        ap_reg_pp0_iter8_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter7_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter8_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter7_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter8_tmp_8_reg_334 <= ap_reg_pp0_iter7_tmp_8_reg_334;
        ap_reg_pp0_iter8_tmp_i_i_reg_348 <= ap_reg_pp0_iter7_tmp_i_i_reg_348;
        ap_reg_pp0_iter8_tmp_reg_339 <= ap_reg_pp0_iter7_tmp_reg_339;
        ap_reg_pp0_iter9_exitcond_i_i_i_reg_318 <= ap_reg_pp0_iter8_exitcond_i_i_i_reg_318;
        ap_reg_pp0_iter9_tmp_1_i_i_reg_344 <= ap_reg_pp0_iter8_tmp_1_i_i_reg_344;
        ap_reg_pp0_iter9_tmp_8_reg_334 <= ap_reg_pp0_iter8_tmp_8_reg_334;
        ap_reg_pp0_iter9_tmp_i_i_reg_348 <= ap_reg_pp0_iter8_tmp_i_i_reg_348;
        ap_reg_pp0_iter9_tmp_reg_339 <= ap_reg_pp0_iter8_tmp_reg_339;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 <= exitcond_i_i_i_reg_318;
        exitcond_i_i_i_reg_318 <= exitcond_i_i_i_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        extLd_reg_299[7 : 0] <= extLd_fu_189_p1[7 : 0];
        max_read_reg_279 <= max_dout;
        min_read_reg_284 <= min_dout;
        p_cols_assign_cast_lo_reg_294 <= p_cols_assign_cast_loc_dout;
        p_rows_assign_cast_lo_reg_289 <= p_rows_assign_cast_loc_dout;
        tmp_8_tr_cast_i_i_ca_reg_304 <= tmp_8_tr_cast_i_i_ca_fu_203_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_313 <= i_V_fu_216_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_fu_241_p2 == 1'd0) & (tmp_1_i_i_fu_237_p2 == 1'd0) & (ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_i_i_reg_352 <= tmp_10_i_i_fu_265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_i_i_reg_344 <= tmp_1_i_i_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_i_reg_318 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_8_reg_334 <= img1_data_stream_1_V_dout;
        tmp_9_reg_327 <= img1_data_stream_0_V_dout;
        tmp_reg_339 <= img1_data_stream_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_i_i_fu_237_p2 == 1'd0) & (ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_i_reg_348 <= tmp_i_i_fu_241_p2;
    end
end

always @ (*) begin
    if ((exitcond_i_i_i_fu_226_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond51_i_i_i_fu_211_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond51_i_i_i_fu_211_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_271_ce = 1'b1;
    end else begin
        grp_fu_271_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img1_data_stream_0_V_blk_n = img1_data_stream_0_V_empty_n;
    end else begin
        img1_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_i_i_reg_318 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img1_data_stream_0_V_read = 1'b1;
    end else begin
        img1_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img1_data_stream_1_V_blk_n = img1_data_stream_1_V_empty_n;
    end else begin
        img1_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_i_i_reg_318 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img1_data_stream_1_V_read = 1'b1;
    end else begin
        img1_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img1_data_stream_2_V_blk_n = img1_data_stream_2_V_empty_n;
    end else begin
        img1_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_i_i_reg_318 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img1_data_stream_2_V_read = 1'b1;
    end else begin
        img1_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        img2_data_stream_0_V_blk_n = img2_data_stream_0_V_full_n;
    end else begin
        img2_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img2_data_stream_0_V_write = 1'b1;
    end else begin
        img2_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        img2_data_stream_1_V_blk_n = img2_data_stream_1_V_full_n;
    end else begin
        img2_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img2_data_stream_1_V_write = 1'b1;
    end else begin
        img2_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        img2_data_stream_2_V_blk_n = img2_data_stream_2_V_full_n;
    end else begin
        img2_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img2_data_stream_2_V_write = 1'b1;
    end else begin
        img2_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        max_blk_n = max_empty_n;
    end else begin
        max_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        max_read = 1'b1;
    end else begin
        max_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_blk_n = min_empty_n;
    end else begin
        min_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_read = 1'b1;
    end else begin
        min_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cols_assign_cast_loc_blk_n = p_cols_assign_cast_loc_empty_n;
    end else begin
        p_cols_assign_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cols_assign_cast_loc_read = 1'b1;
    end else begin
        p_cols_assign_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_rows_assign_cast_loc_blk_n = p_rows_assign_cast_loc_empty_n;
    end else begin
        p_rows_assign_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_rows_assign_cast_loc_read = 1'b1;
    end else begin
        p_rows_assign_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_3_cast_loc_blk_n = tmp_3_cast_loc_empty_n;
    end else begin
        tmp_3_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_3_cast_loc_read = 1'b1;
    end else begin
        tmp_3_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond51_i_i_i_fu_211_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_i_i_fu_226_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter23 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter24 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter23 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter24 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_i_i_fu_226_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (tmp_3_cast_loc_empty_n == 1'b0) | (min_empty_n == 1'b0) | (p_cols_assign_cast_loc_empty_n == 1'b0) | (p_rows_assign_cast_loc_empty_n == 1'b0) | (max_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_pp0_stage0_iter24 = (((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter23_exitcond_i_i_i_reg_318 == 1'd0) & (img2_data_stream_0_V_full_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_i_i_i_reg_318 == 1'd0) & (img1_data_stream_0_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_362 = ((ap_reg_pp0_iter22_tmp_i_i_reg_348 == 1'd0) & (ap_reg_pp0_iter22_tmp_1_i_i_reg_344 == 1'd0) & (ap_reg_pp0_iter22_exitcond_i_i_i_reg_318 == 1'd0));
end

always @ (*) begin
    ap_condition_490 = ((tmp_1_i_i_fu_237_p2 == 1'd0) & (ap_reg_pp0_iter1_exitcond_i_i_i_reg_318 == 1'd0) & (tmp_i_i_fu_241_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_2_reg_173 = 'bx;

assign exitcond51_i_i_i_fu_211_p2 = ((t_V_cast_i_i_fu_207_p1 == p_rows_assign_cast_lo_reg_289) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_fu_226_p2 = ((t_V_1_cast_i_i_fu_222_p1 == p_cols_assign_cast_lo_reg_294) ? 1'b1 : 1'b0);

assign extLd_fu_189_p1 = tmp_3_cast_loc_dout;

assign grp_fu_271_p1 = tmp_8_tr_cast_i_i_ca_reg_304;

assign i_V_fu_216_p2 = (t_V_reg_151 + 11'd1);

assign img2_data_stream_0_V_din = ap_phi_reg_pp0_iter24_tmp_2_reg_173;

assign img2_data_stream_1_V_din = ap_reg_pp0_iter23_tmp_8_reg_334;

assign img2_data_stream_2_V_din = ap_reg_pp0_iter23_tmp_reg_339;

assign j_V_fu_231_p2 = (t_V_2_reg_162 + 11'd1);

assign p_shl_i_i_fu_257_p3 = {{tmp_9_i_i_fu_248_p2}, {8'd0}};

assign t_V_1_cast_i_i_fu_222_p1 = t_V_2_reg_162;

assign t_V_cast_i_i_fu_207_p1 = t_V_reg_151;

assign tmp_10_i_i_fu_265_p2 = ($signed(p_shl_i_i_fu_257_p3) - $signed(tmp_9_cast_i_i_fu_253_p1));

assign tmp_1_i_i_fu_237_p2 = ((tmp_9_reg_327 > max_read_reg_279) ? 1'b1 : 1'b0);

assign tmp_7_fu_275_p1 = grp_fu_271_p2[7:0];

assign tmp_8_cast_i_i_fu_245_p1 = tmp_9_reg_327;

assign tmp_8_tr_cast_i_i_ca_fu_203_p1 = $signed(tmp_8_tr_i_i_fu_197_p2);

assign tmp_8_tr_i_i_fu_197_p2 = (tmp_cast_i_i_fu_193_p1 - extLd_fu_189_p1);

assign tmp_9_cast_i_i_fu_253_p1 = $signed(tmp_9_i_i_fu_248_p2);

assign tmp_9_i_i_fu_248_p2 = (tmp_8_cast_i_i_fu_245_p1 - extLd_reg_299);

assign tmp_cast_i_i_fu_193_p1 = max_dout;

assign tmp_i_i_fu_241_p2 = ((tmp_9_reg_327 < min_read_reg_284) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    extLd_reg_299[8] <= 1'b0;
end

endmodule //Loop_loop_height_pro

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CvtColor_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_V_dout,
        p_src_rows_V_empty_n,
        p_src_rows_V_read,
        p_src_cols_V_dout,
        p_src_cols_V_empty_n,
        p_src_cols_V_read,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state14 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] p_src_rows_V_dout;
input   p_src_rows_V_empty_n;
output   p_src_rows_V_read;
input  [15:0] p_src_cols_V_dout;
input   p_src_cols_V_empty_n;
output   p_src_cols_V_read;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_rows_V_read;
reg p_src_cols_V_read;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] sector_data_0_address0;
reg    sector_data_0_ce0;
wire   [1:0] sector_data_0_q0;
wire   [2:0] sector_data_1_address0;
reg    sector_data_1_ce0;
wire   [1:0] sector_data_1_q0;
wire   [2:0] sector_data_2_address0;
reg    sector_data_2_ce0;
wire   [1:0] sector_data_2_q0;
reg    p_src_rows_V_blk_n;
reg    p_src_cols_V_blk_n;
reg    p_src_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_53_i_reg_783;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] ap_reg_pp0_iter9_tmp_53_i_reg_783;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg   [10:0] j_i_reg_226;
reg   [15:0] p_src_cols_V_read_reg_764;
reg    ap_block_state1;
reg   [15:0] p_src_rows_V_read_reg_769;
wire   [0:0] tmp_i_fu_241_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_fu_246_p2;
reg   [10:0] i_reg_778;
wire   [0:0] tmp_53_i_fu_256_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
reg    ap_block_state13_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_tmp_53_i_reg_783;
reg   [0:0] ap_reg_pp0_iter2_tmp_53_i_reg_783;
reg   [0:0] ap_reg_pp0_iter3_tmp_53_i_reg_783;
reg   [0:0] ap_reg_pp0_iter4_tmp_53_i_reg_783;
reg   [0:0] ap_reg_pp0_iter5_tmp_53_i_reg_783;
reg   [0:0] ap_reg_pp0_iter6_tmp_53_i_reg_783;
reg   [0:0] ap_reg_pp0_iter7_tmp_53_i_reg_783;
reg   [0:0] ap_reg_pp0_iter8_tmp_53_i_reg_783;
wire   [10:0] j_fu_261_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_26_reg_792;
reg   [7:0] ap_reg_pp0_iter2_tmp_26_reg_792;
reg   [7:0] tmp_27_reg_797;
reg   [7:0] ap_reg_pp0_iter2_tmp_27_reg_797;
reg   [7:0] ap_reg_pp0_iter3_tmp_27_reg_797;
reg   [7:0] tmp_28_reg_804;
reg   [7:0] ap_reg_pp0_iter2_tmp_28_reg_804;
reg   [0:0] tmp_reg_811;
reg   [0:0] ap_reg_pp0_iter2_tmp_reg_811;
wire   [6:0] tmp_10_fu_275_p1;
reg   [6:0] tmp_10_reg_816;
reg   [6:0] ap_reg_pp0_iter2_tmp_10_reg_816;
wire   [26:0] p_Val2_i_fu_752_p2;
reg   [26:0] p_Val2_i_reg_821;
wire   [23:0] r_V_3_fu_758_p2;
reg   [23:0] r_V_3_reg_827;
wire   [27:0] tab_0_V_fu_346_p3;
reg   [27:0] tab_0_V_reg_833;
reg   [27:0] ap_reg_pp0_iter4_tab_0_V_reg_833;
reg   [27:0] ap_reg_pp0_iter5_tab_0_V_reg_833;
reg   [27:0] ap_reg_pp0_iter6_tab_0_V_reg_833;
reg   [27:0] ap_reg_pp0_iter7_tab_0_V_reg_833;
reg   [27:0] ap_reg_pp0_iter8_tab_0_V_reg_833;
wire   [4:0] tmp_s_fu_356_p4;
reg   [4:0] tmp_s_reg_843;
reg   [4:0] ap_reg_pp0_iter5_tmp_s_reg_843;
wire   [24:0] f_V_fu_377_p2;
reg   [24:0] f_V_reg_850;
wire   [27:0] tab_1_V_fu_390_p2;
reg   [27:0] tab_1_V_reg_855;
reg   [27:0] ap_reg_pp0_iter5_tab_1_V_reg_855;
reg   [27:0] ap_reg_pp0_iter6_tab_1_V_reg_855;
reg   [27:0] ap_reg_pp0_iter7_tab_1_V_reg_855;
reg   [27:0] ap_reg_pp0_iter8_tab_1_V_reg_855;
wire   [28:0] r_V_fu_402_p2;
reg  signed [28:0] r_V_reg_863;
wire   [4:0] h_i_1_fu_434_p3;
reg   [4:0] h_i_1_reg_878;
wire   [46:0] grp_fu_418_p2;
reg   [46:0] p_Val2_4_i_reg_883;
reg   [27:0] tab_2_V_reg_904;
reg   [27:0] tab_3_V_reg_911;
reg   [1:0] sector_data_0_load_reg_918;
reg   [1:0] sector_data_1_load_reg_923;
reg   [1:0] sector_data_2_load_reg_928;
wire   [7:0] p_Val2_20_fu_570_p3;
reg   [7:0] p_Val2_20_reg_933;
wire   [7:0] p_Val2_21_fu_657_p3;
reg   [7:0] p_Val2_21_reg_938;
wire   [7:0] p_Val2_22_fu_744_p3;
reg   [7:0] p_Val2_22_reg_943;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg   [10:0] i_i_reg_215;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp_79_i_fu_441_p1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] i_cast_i_cast_fu_237_p1;
wire   [15:0] j_cast_i_cast_fu_252_p1;
wire   [18:0] r_V_4_fu_279_p4;
wire   [8:0] tmp_62_i_fu_303_p1;
wire   [8:0] tmp_61_i_fu_300_p1;
wire   [8:0] tmp_63_i_fu_306_p2;
wire   [27:0] tmp_65_i_fu_312_p3;
wire   [27:0] p_Val2_cast_i_fu_297_p1;
wire   [25:0] tmp_66_i_fu_326_p3;
wire   [26:0] tmp_66_cast_i_fu_333_p1;
(* use_dsp48 = "no" *) wire   [26:0] p_Val2_2_i_fu_337_p2;
wire   [27:0] p_Val2_1_i_fu_320_p2;
wire   [27:0] p_Val2_2_cast_i_fu_342_p1;
wire   [23:0] tmp_55_i_fu_365_p3;
wire   [24:0] r_V_10_cast1_i_cast_fu_353_p1;
wire   [24:0] tmp_55_cast_i_cast_fu_373_p1;
wire   [27:0] tmp_67_i_fu_383_p3;
wire   [28:0] tmp_68_i_fu_395_p1;
wire   [28:0] tmp_69_i_fu_398_p1;
wire  signed [27:0] f_V_cast_fu_408_p1;
wire   [27:0] grp_fu_418_p1;
wire   [0:0] tmp_58_i_fu_424_p2;
wire   [4:0] h_i_fu_429_p2;
wire   [46:0] tmp_71_i_fu_447_p3;
wire   [46:0] p_Val2_5_fu_454_p2;
wire   [46:0] tmp_76_i_fu_469_p3;
wire   [46:0] p_Val2_6_fu_476_p2;
wire   [27:0] p_Val2_7_fu_491_p6;
wire   [0:0] tmp_11_fu_510_p3;
wire   [7:0] p_Val2_8_fu_500_p4;
wire   [7:0] tmp_i_i_i_fu_518_p1;
wire   [7:0] p_Val2_9_fu_530_p2;
wire   [0:0] tmp_13_fu_536_p3;
wire   [0:0] tmp_12_fu_522_p3;
wire   [0:0] tmp_14_i_i_i_fu_544_p2;
wire   [0:0] carry_fu_550_p2;
wire   [0:0] lD_fu_556_p3;
wire   [0:0] Range1_all_ones_fu_564_p2;
wire   [27:0] p_Val2_11_fu_578_p6;
wire   [0:0] tmp_15_fu_597_p3;
wire   [7:0] p_Val2_12_fu_587_p4;
wire   [7:0] tmp_i_i109_i_fu_605_p1;
wire   [7:0] p_Val2_13_fu_617_p2;
wire   [0:0] tmp_17_fu_623_p3;
wire   [0:0] tmp_16_fu_609_p3;
wire   [0:0] tmp_14_i_i113_i_fu_631_p2;
wire   [0:0] carry_1_fu_637_p2;
wire   [0:0] lD_1_fu_643_p3;
wire   [0:0] Range1_all_ones_6_fu_651_p2;
wire   [27:0] p_Val2_s_fu_665_p6;
wire   [0:0] tmp_19_fu_684_p3;
wire   [7:0] p_Val2_17_fu_674_p4;
wire   [7:0] tmp_i_i122_i_fu_692_p1;
wire   [7:0] p_Val2_18_fu_704_p2;
wire   [0:0] tmp_21_fu_710_p3;
wire   [0:0] tmp_20_fu_696_p3;
wire   [0:0] tmp_14_i_i126_i_fu_718_p2;
wire   [0:0] carry_2_fu_724_p2;
wire   [0:0] lD_2_fu_730_p3;
wire   [0:0] Range1_all_ones_7_fu_738_p2;
wire   [18:0] p_Val2_i_fu_752_p0;
wire   [7:0] p_Val2_i_fu_752_p1;
wire   [15:0] r_V_3_fu_758_p0;
wire   [7:0] r_V_3_fu_758_p1;
reg    grp_fu_418_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [46:0] grp_fu_418_p10;
wire   [26:0] p_Val2_i_fu_752_p00;
wire   [26:0] p_Val2_i_fu_752_p10;
wire   [23:0] r_V_3_fu_758_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

CvtColor_1_sectormb6 #(
    .DataWidth( 2 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
sector_data_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sector_data_0_address0),
    .ce0(sector_data_0_ce0),
    .q0(sector_data_0_q0)
);

CvtColor_1_sectorncg #(
    .DataWidth( 2 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
sector_data_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sector_data_1_address0),
    .ce0(sector_data_1_ce0),
    .q0(sector_data_1_q0)
);

CvtColor_1_sectorocq #(
    .DataWidth( 2 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
sector_data_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sector_data_2_address0),
    .ce0(sector_data_2_ce0),
    .q0(sector_data_2_q0)
);

hls_saturation_enpcA #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 47 ))
hls_saturation_enpcA_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_reg_863),
    .din1(grp_fu_418_p1),
    .ce(grp_fu_418_ce),
    .dout(grp_fu_418_p2)
);

hls_saturation_enqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 28 ),
    .din2_WIDTH( 28 ),
    .din3_WIDTH( 28 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 28 ))
hls_saturation_enqcK_U61(
    .din0(ap_reg_pp0_iter8_tab_0_V_reg_833),
    .din1(ap_reg_pp0_iter8_tab_1_V_reg_855),
    .din2(tab_2_V_reg_904),
    .din3(tab_3_V_reg_911),
    .din4(sector_data_0_load_reg_918),
    .dout(p_Val2_7_fu_491_p6)
);

hls_saturation_enqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 28 ),
    .din2_WIDTH( 28 ),
    .din3_WIDTH( 28 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 28 ))
hls_saturation_enqcK_U62(
    .din0(ap_reg_pp0_iter8_tab_0_V_reg_833),
    .din1(ap_reg_pp0_iter8_tab_1_V_reg_855),
    .din2(tab_2_V_reg_904),
    .din3(tab_3_V_reg_911),
    .din4(sector_data_1_load_reg_923),
    .dout(p_Val2_11_fu_578_p6)
);

hls_saturation_enqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 28 ),
    .din2_WIDTH( 28 ),
    .din3_WIDTH( 28 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 28 ))
hls_saturation_enqcK_U63(
    .din0(ap_reg_pp0_iter8_tab_0_V_reg_833),
    .din1(ap_reg_pp0_iter8_tab_1_V_reg_855),
    .din2(tab_2_V_reg_904),
    .din3(tab_3_V_reg_911),
    .din4(sector_data_2_load_reg_928),
    .dout(p_Val2_s_fu_665_p6)
);

hls_saturation_enrcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 27 ))
hls_saturation_enrcU_U64(
    .din0(p_Val2_i_fu_752_p0),
    .din1(p_Val2_i_fu_752_p1),
    .dout(p_Val2_i_fu_752_p2)
);

hls_saturation_ensc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
hls_saturation_ensc4_U65(
    .din0(r_V_3_fu_758_p0),
    .din1(r_V_3_fu_758_p1),
    .dout(r_V_3_fu_758_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_241_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_241_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_241_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_i_reg_215 <= i_reg_778;
    end else if ((~((ap_start == 1'b0) | (p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_reg_215 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_53_i_fu_256_p2 == 1'd1))) begin
        j_i_reg_226 <= j_fu_261_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_241_p2 == 1'd1))) begin
        j_i_reg_226 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_tmp_53_i_reg_783 <= tmp_53_i_reg_783;
        tmp_53_i_reg_783 <= tmp_53_i_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_tmp_10_reg_816 <= tmp_10_reg_816;
        ap_reg_pp0_iter2_tmp_26_reg_792 <= tmp_26_reg_792;
        ap_reg_pp0_iter2_tmp_27_reg_797 <= tmp_27_reg_797;
        ap_reg_pp0_iter2_tmp_28_reg_804 <= tmp_28_reg_804;
        ap_reg_pp0_iter2_tmp_53_i_reg_783 <= ap_reg_pp0_iter1_tmp_53_i_reg_783;
        ap_reg_pp0_iter2_tmp_reg_811 <= tmp_reg_811;
        ap_reg_pp0_iter3_tmp_27_reg_797 <= ap_reg_pp0_iter2_tmp_27_reg_797;
        ap_reg_pp0_iter3_tmp_53_i_reg_783 <= ap_reg_pp0_iter2_tmp_53_i_reg_783;
        ap_reg_pp0_iter4_tab_0_V_reg_833 <= tab_0_V_reg_833;
        ap_reg_pp0_iter4_tmp_53_i_reg_783 <= ap_reg_pp0_iter3_tmp_53_i_reg_783;
        ap_reg_pp0_iter5_tab_0_V_reg_833 <= ap_reg_pp0_iter4_tab_0_V_reg_833;
        ap_reg_pp0_iter5_tab_1_V_reg_855 <= tab_1_V_reg_855;
        ap_reg_pp0_iter5_tmp_53_i_reg_783 <= ap_reg_pp0_iter4_tmp_53_i_reg_783;
        ap_reg_pp0_iter5_tmp_s_reg_843 <= tmp_s_reg_843;
        ap_reg_pp0_iter6_tab_0_V_reg_833 <= ap_reg_pp0_iter5_tab_0_V_reg_833;
        ap_reg_pp0_iter6_tab_1_V_reg_855 <= ap_reg_pp0_iter5_tab_1_V_reg_855;
        ap_reg_pp0_iter6_tmp_53_i_reg_783 <= ap_reg_pp0_iter5_tmp_53_i_reg_783;
        ap_reg_pp0_iter7_tab_0_V_reg_833 <= ap_reg_pp0_iter6_tab_0_V_reg_833;
        ap_reg_pp0_iter7_tab_1_V_reg_855 <= ap_reg_pp0_iter6_tab_1_V_reg_855;
        ap_reg_pp0_iter7_tmp_53_i_reg_783 <= ap_reg_pp0_iter6_tmp_53_i_reg_783;
        ap_reg_pp0_iter8_tab_0_V_reg_833 <= ap_reg_pp0_iter7_tab_0_V_reg_833;
        ap_reg_pp0_iter8_tab_1_V_reg_855 <= ap_reg_pp0_iter7_tab_1_V_reg_855;
        ap_reg_pp0_iter8_tmp_53_i_reg_783 <= ap_reg_pp0_iter7_tmp_53_i_reg_783;
        ap_reg_pp0_iter9_tmp_53_i_reg_783 <= ap_reg_pp0_iter8_tmp_53_i_reg_783;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter3_tmp_53_i_reg_783 == 1'd1))) begin
        f_V_reg_850 <= f_V_fu_377_p2;
        r_V_reg_863 <= r_V_fu_402_p2;
        tab_1_V_reg_855 <= tab_1_V_fu_390_p2;
        tmp_s_reg_843 <= {{r_V_3_reg_827[23:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter5_tmp_53_i_reg_783 == 1'd1))) begin
        h_i_1_reg_878 <= h_i_1_fu_434_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_778 <= i_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter8_tmp_53_i_reg_783 == 1'd1))) begin
        p_Val2_20_reg_933 <= p_Val2_20_fu_570_p3;
        p_Val2_21_reg_938 <= p_Val2_21_fu_657_p3;
        p_Val2_22_reg_943 <= p_Val2_22_fu_744_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter6_tmp_53_i_reg_783 == 1'd1))) begin
        p_Val2_4_i_reg_883 <= grp_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_53_i_reg_783 == 1'd1))) begin
        p_Val2_i_reg_821 <= p_Val2_i_fu_752_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_read_reg_764 <= p_src_cols_V_dout;
        p_src_rows_V_read_reg_769 <= p_src_rows_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter2_tmp_53_i_reg_783 == 1'd1))) begin
        r_V_3_reg_827 <= r_V_3_fu_758_p2;
        tab_0_V_reg_833 <= tab_0_V_fu_346_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter7_tmp_53_i_reg_783 == 1'd1))) begin
        sector_data_0_load_reg_918 <= sector_data_0_q0;
        sector_data_1_load_reg_923 <= sector_data_1_q0;
        sector_data_2_load_reg_928 <= sector_data_2_q0;
        tab_2_V_reg_904 <= {{p_Val2_5_fu_454_p2[46:19]}};
        tab_3_V_reg_911 <= {{p_Val2_6_fu_476_p2[46:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_53_i_reg_783 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_reg_816 <= tmp_10_fu_275_p1;
        tmp_26_reg_792 <= p_src_data_stream_0_V_dout;
        tmp_27_reg_797 <= p_src_data_stream_1_V_dout;
        tmp_28_reg_804 <= p_src_data_stream_2_V_dout;
        tmp_reg_811 <= p_src_data_stream_1_V_dout[32'd7];
    end
end

always @ (*) begin
    if ((tmp_53_i_fu_256_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_241_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_241_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_418_ce = 1'b1;
    end else begin
        grp_fu_418_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_blk_n = p_src_cols_V_empty_n;
    end else begin
        p_src_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_read = 1'b1;
    end else begin
        p_src_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_783 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_783 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_783 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_783 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_783 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_783 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_blk_n = p_src_rows_V_empty_n;
    end else begin
        p_src_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_read = 1'b1;
    end else begin
        p_src_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sector_data_0_ce0 = 1'b1;
    end else begin
        sector_data_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sector_data_1_ce0 = 1'b1;
    end else begin
        sector_data_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sector_data_2_ce0 = 1'b1;
    end else begin
        sector_data_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_241_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_53_i_fu_256_p2 == 1'd0)) & ~((ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_53_i_fu_256_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_6_fu_651_p2 = (lD_1_fu_643_p3 | carry_1_fu_637_p2);

assign Range1_all_ones_7_fu_738_p2 = (lD_2_fu_730_p3 | carry_2_fu_724_p2);

assign Range1_all_ones_fu_564_p2 = (lD_fu_556_p3 | carry_fu_550_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (((p_dst_data_stream_2_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (((p_dst_data_stream_2_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (((p_dst_data_stream_2_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter10 = (((p_dst_data_stream_2_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_1_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)) | ((p_dst_data_stream_0_V_full_n == 1'b0) & (ap_reg_pp0_iter9_tmp_53_i_reg_783 == 1'd1)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((tmp_53_i_reg_783 == 1'd1) & (p_src_data_stream_0_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign carry_1_fu_637_p2 = (tmp_16_fu_609_p3 & tmp_14_i_i113_i_fu_631_p2);

assign carry_2_fu_724_p2 = (tmp_20_fu_696_p3 & tmp_14_i_i126_i_fu_718_p2);

assign carry_fu_550_p2 = (tmp_14_i_i_i_fu_544_p2 & tmp_12_fu_522_p3);

assign f_V_cast_fu_408_p1 = $signed(f_V_reg_850);

assign f_V_fu_377_p2 = (r_V_10_cast1_i_cast_fu_353_p1 - tmp_55_cast_i_cast_fu_373_p1);

assign grp_fu_418_p1 = grp_fu_418_p10;

assign grp_fu_418_p10 = $unsigned(f_V_cast_fu_408_p1);

assign h_i_1_fu_434_p3 = ((tmp_58_i_fu_424_p2[0:0] === 1'b1) ? h_i_fu_429_p2 : ap_reg_pp0_iter5_tmp_s_reg_843);

assign h_i_fu_429_p2 = ($signed(5'd26) + $signed(ap_reg_pp0_iter5_tmp_s_reg_843));

assign i_cast_i_cast_fu_237_p1 = i_i_reg_215;

assign i_fu_246_p2 = (i_i_reg_215 + 11'd1);

assign j_cast_i_cast_fu_252_p1 = j_i_reg_226;

assign j_fu_261_p2 = (j_i_reg_226 + 11'd1);

assign lD_1_fu_643_p3 = p_Val2_11_fu_578_p6[32'd27];

assign lD_2_fu_730_p3 = p_Val2_s_fu_665_p6[32'd27];

assign lD_fu_556_p3 = p_Val2_7_fu_491_p6[32'd27];

assign p_Val2_12_fu_587_p4 = {{p_Val2_11_fu_578_p6[26:19]}};

assign p_Val2_13_fu_617_p2 = (p_Val2_12_fu_587_p4 + tmp_i_i109_i_fu_605_p1);

assign p_Val2_17_fu_674_p4 = {{p_Val2_s_fu_665_p6[26:19]}};

assign p_Val2_18_fu_704_p2 = (p_Val2_17_fu_674_p4 + tmp_i_i122_i_fu_692_p1);

assign p_Val2_1_i_fu_320_p2 = (tmp_65_i_fu_312_p3 - p_Val2_cast_i_fu_297_p1);

assign p_Val2_20_fu_570_p3 = ((Range1_all_ones_fu_564_p2[0:0] === 1'b1) ? 8'd255 : p_Val2_9_fu_530_p2);

assign p_Val2_21_fu_657_p3 = ((Range1_all_ones_6_fu_651_p2[0:0] === 1'b1) ? 8'd255 : p_Val2_13_fu_617_p2);

assign p_Val2_22_fu_744_p3 = ((Range1_all_ones_7_fu_738_p2[0:0] === 1'b1) ? 8'd255 : p_Val2_18_fu_704_p2);

assign p_Val2_2_cast_i_fu_342_p1 = p_Val2_2_i_fu_337_p2;

assign p_Val2_2_i_fu_337_p2 = (p_Val2_i_reg_821 + tmp_66_cast_i_fu_333_p1);

assign p_Val2_5_fu_454_p2 = (tmp_71_i_fu_447_p3 - p_Val2_4_i_reg_883);

assign p_Val2_6_fu_476_p2 = (tmp_76_i_fu_469_p3 + p_Val2_4_i_reg_883);

assign p_Val2_8_fu_500_p4 = {{p_Val2_7_fu_491_p6[26:19]}};

assign p_Val2_9_fu_530_p2 = (p_Val2_8_fu_500_p4 + tmp_i_i_i_fu_518_p1);

assign p_Val2_cast_i_fu_297_p1 = p_Val2_i_reg_821;

assign p_Val2_i_fu_752_p0 = p_Val2_i_fu_752_p00;

assign p_Val2_i_fu_752_p00 = r_V_4_fu_279_p4;

assign p_Val2_i_fu_752_p1 = p_Val2_i_fu_752_p10;

assign p_Val2_i_fu_752_p10 = tmp_27_reg_797;

assign p_dst_data_stream_0_V_din = p_Val2_20_reg_933;

assign p_dst_data_stream_1_V_din = p_Val2_21_reg_938;

assign p_dst_data_stream_2_V_din = p_Val2_22_reg_943;

assign r_V_10_cast1_i_cast_fu_353_p1 = r_V_3_reg_827;

assign r_V_3_fu_758_p0 = 24'd17476;

assign r_V_3_fu_758_p1 = r_V_3_fu_758_p10;

assign r_V_3_fu_758_p10 = ap_reg_pp0_iter2_tmp_26_reg_792;

assign r_V_4_fu_279_p4 = {{{tmp_28_reg_804}, {tmp_28_reg_804}}, {3'd0}};

assign r_V_fu_402_p2 = (tmp_68_i_fu_395_p1 - tmp_69_i_fu_398_p1);

assign sector_data_0_address0 = tmp_79_i_fu_441_p1;

assign sector_data_1_address0 = tmp_79_i_fu_441_p1;

assign sector_data_2_address0 = tmp_79_i_fu_441_p1;

assign tab_0_V_fu_346_p3 = ((ap_reg_pp0_iter2_tmp_reg_811[0:0] === 1'b1) ? p_Val2_1_i_fu_320_p2 : p_Val2_2_cast_i_fu_342_p1);

assign tab_1_V_fu_390_p2 = (tmp_67_i_fu_383_p3 - tab_0_V_reg_833);

assign tmp_10_fu_275_p1 = p_src_data_stream_1_V_dout[6:0];

assign tmp_11_fu_510_p3 = p_Val2_7_fu_491_p6[32'd18];

assign tmp_12_fu_522_p3 = p_Val2_7_fu_491_p6[32'd26];

assign tmp_13_fu_536_p3 = p_Val2_9_fu_530_p2[32'd7];

assign tmp_14_i_i113_i_fu_631_p2 = (tmp_17_fu_623_p3 ^ 1'd1);

assign tmp_14_i_i126_i_fu_718_p2 = (tmp_21_fu_710_p3 ^ 1'd1);

assign tmp_14_i_i_i_fu_544_p2 = (tmp_13_fu_536_p3 ^ 1'd1);

assign tmp_15_fu_597_p3 = p_Val2_11_fu_578_p6[32'd18];

assign tmp_16_fu_609_p3 = p_Val2_11_fu_578_p6[32'd26];

assign tmp_17_fu_623_p3 = p_Val2_13_fu_617_p2[32'd7];

assign tmp_19_fu_684_p3 = p_Val2_s_fu_665_p6[32'd18];

assign tmp_20_fu_696_p3 = p_Val2_s_fu_665_p6[32'd26];

assign tmp_21_fu_710_p3 = p_Val2_18_fu_704_p2[32'd7];

assign tmp_53_i_fu_256_p2 = ((j_cast_i_cast_fu_252_p1 < p_src_cols_V_read_reg_764) ? 1'b1 : 1'b0);

assign tmp_55_cast_i_cast_fu_373_p1 = tmp_55_i_fu_365_p3;

assign tmp_55_i_fu_365_p3 = {{tmp_s_fu_356_p4}, {19'd0}};

assign tmp_58_i_fu_424_p2 = ((ap_reg_pp0_iter5_tmp_s_reg_843 > 5'd5) ? 1'b1 : 1'b0);

assign tmp_61_i_fu_300_p1 = ap_reg_pp0_iter2_tmp_28_reg_804;

assign tmp_62_i_fu_303_p1 = ap_reg_pp0_iter2_tmp_27_reg_797;

assign tmp_63_i_fu_306_p2 = (tmp_62_i_fu_303_p1 + tmp_61_i_fu_300_p1);

assign tmp_65_i_fu_312_p3 = {{tmp_63_i_fu_306_p2}, {19'd0}};

assign tmp_66_cast_i_fu_333_p1 = tmp_66_i_fu_326_p3;

assign tmp_66_i_fu_326_p3 = {{ap_reg_pp0_iter2_tmp_10_reg_816}, {19'd0}};

assign tmp_67_i_fu_383_p3 = {{ap_reg_pp0_iter3_tmp_27_reg_797}, {20'd0}};

assign tmp_68_i_fu_395_p1 = tab_0_V_reg_833;

assign tmp_69_i_fu_398_p1 = tab_1_V_fu_390_p2;

assign tmp_71_i_fu_447_p3 = {{ap_reg_pp0_iter7_tab_0_V_reg_833}, {19'd0}};

assign tmp_76_i_fu_469_p3 = {{ap_reg_pp0_iter7_tab_1_V_reg_855}, {19'd0}};

assign tmp_79_i_fu_441_p1 = h_i_1_reg_878;

assign tmp_i_fu_241_p2 = ((i_cast_i_cast_fu_237_p1 < p_src_rows_V_read_reg_769) ? 1'b1 : 1'b0);

assign tmp_i_i109_i_fu_605_p1 = tmp_15_fu_597_p3;

assign tmp_i_i122_i_fu_692_p1 = tmp_19_fu_684_p3;

assign tmp_i_i_i_fu_518_p1 = tmp_11_fu_510_p3;

assign tmp_s_fu_356_p4 = {{r_V_3_reg_827[23:19]}};

endmodule //CvtColor_1

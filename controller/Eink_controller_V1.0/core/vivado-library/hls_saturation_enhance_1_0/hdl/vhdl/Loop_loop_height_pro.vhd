-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_loop_height_pro is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_rows_assign_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_rows_assign_cast_loc_empty_n : IN STD_LOGIC;
    p_rows_assign_cast_loc_read : OUT STD_LOGIC;
    p_cols_assign_cast_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_cols_assign_cast_loc_empty_n : IN STD_LOGIC;
    p_cols_assign_cast_loc_read : OUT STD_LOGIC;
    img2_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img2_data_stream_0_V_full_n : IN STD_LOGIC;
    img2_data_stream_0_V_write : OUT STD_LOGIC;
    img2_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img2_data_stream_1_V_full_n : IN STD_LOGIC;
    img2_data_stream_1_V_write : OUT STD_LOGIC;
    img2_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img2_data_stream_2_V_full_n : IN STD_LOGIC;
    img2_data_stream_2_V_write : OUT STD_LOGIC;
    img1_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img1_data_stream_0_V_empty_n : IN STD_LOGIC;
    img1_data_stream_0_V_read : OUT STD_LOGIC;
    img1_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img1_data_stream_1_V_empty_n : IN STD_LOGIC;
    img1_data_stream_1_V_read : OUT STD_LOGIC;
    img1_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img1_data_stream_2_V_empty_n : IN STD_LOGIC;
    img1_data_stream_2_V_read : OUT STD_LOGIC;
    sat_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    sat_empty_n : IN STD_LOGIC;
    sat_read : OUT STD_LOGIC );
end;


architecture behav of Loop_loop_height_pro is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lut_s_1_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_1_2_ce0 : STD_LOGIC;
    signal lut_s_1_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_n0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_n0_2_ce0 : STD_LOGIC;
    signal lut_s_n0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_2_ce0 : STD_LOGIC;
    signal lut_s_0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_4_ce0 : STD_LOGIC;
    signal lut_s_0_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_6_ce0 : STD_LOGIC;
    signal lut_s_0_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_8_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_0_8_ce0 : STD_LOGIC;
    signal lut_s_0_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_1_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_s_1_0_ce0 : STD_LOGIC;
    signal lut_s_1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_rows_assign_cast_loc_blk_n : STD_LOGIC;
    signal p_cols_assign_cast_loc_blk_n : STD_LOGIC;
    signal img2_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_i_i_reg_478 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 : STD_LOGIC_VECTOR (0 downto 0);
    signal img2_data_stream_1_V_blk_n : STD_LOGIC;
    signal img2_data_stream_2_V_blk_n : STD_LOGIC;
    signal img1_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal img1_data_stream_1_V_blk_n : STD_LOGIC;
    signal img1_data_stream_2_V_blk_n : STD_LOGIC;
    signal sat_blk_n : STD_LOGIC;
    signal t_V_2_reg_252 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_rows_assign_cast_lo_reg_406 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal p_cols_assign_cast_lo_reg_411 : STD_LOGIC_VECTOR (11 downto 0);
    signal sel_tmp_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_416 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_421 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_426 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_reg_432 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_437 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_443 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_448 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_454 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_cond2_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_464 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond51_i_i_i_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_V_fu_332_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_473 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_i_i_i_reg_478 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_347_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_reg_487 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_reg_487 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_reg_487 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_492 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_7_reg_492 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_7_reg_492 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_reg_497 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_9_reg_497 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_val_2_2_reg_538 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_val_2_3_reg_543 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_val_2_6_reg_548 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_val_2_7_reg_553 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel1_fu_363_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel1_reg_558 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel3_fu_370_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel3_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal t_V_reg_241 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_5_i_i_fu_353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal or_cond1_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_cast_i_i_fu_323_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal t_V_1_cast_i_i_fu_338_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal newSel_fu_376_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel2_fu_381_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel4_fu_386_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel5_fu_392_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component Loop_loop_height_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Loop_loop_height_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Loop_loop_height_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Loop_loop_height_ibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Loop_loop_height_jbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Loop_loop_height_kbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Loop_loop_height_lbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    lut_s_1_2_U : component Loop_loop_height_fYi
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_s_1_2_address0,
        ce0 => lut_s_1_2_ce0,
        q0 => lut_s_1_2_q0);

    lut_s_n0_2_U : component Loop_loop_height_g8j
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_s_n0_2_address0,
        ce0 => lut_s_n0_2_ce0,
        q0 => lut_s_n0_2_q0);

    lut_s_0_2_U : component Loop_loop_height_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_s_0_2_address0,
        ce0 => lut_s_0_2_ce0,
        q0 => lut_s_0_2_q0);

    lut_s_0_4_U : component Loop_loop_height_ibs
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_s_0_4_address0,
        ce0 => lut_s_0_4_ce0,
        q0 => lut_s_0_4_q0);

    lut_s_0_6_U : component Loop_loop_height_jbC
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_s_0_6_address0,
        ce0 => lut_s_0_6_ce0,
        q0 => lut_s_0_6_q0);

    lut_s_0_8_U : component Loop_loop_height_kbM
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_s_0_8_address0,
        ce0 => lut_s_0_8_ce0,
        q0 => lut_s_0_8_q0);

    lut_s_1_0_U : component Loop_loop_height_lbW
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_s_1_0_address0,
        ce0 => lut_s_1_0_ce0,
        q0 => lut_s_1_0_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond51_i_i_i_fu_327_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond51_i_i_i_fu_327_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond51_i_i_i_fu_327_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_fu_342_p2 = ap_const_lv1_0))) then 
                t_V_2_reg_252 <= j_V_fu_347_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond51_i_i_i_fu_327_p2 = ap_const_lv1_0))) then 
                t_V_2_reg_252 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_241_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_241 <= i_V_reg_473;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                t_V_reg_241 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_exitcond_i_i_i_reg_478 <= exitcond_i_i_i_reg_478;
                exitcond_i_i_i_reg_478 <= exitcond_i_i_i_fu_342_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 <= ap_reg_pp0_iter1_exitcond_i_i_i_reg_478;
                ap_reg_pp0_iter2_tmp_7_reg_492 <= tmp_7_reg_492;
                ap_reg_pp0_iter2_tmp_9_reg_497 <= tmp_9_reg_497;
                ap_reg_pp0_iter2_tmp_reg_487 <= tmp_reg_487;
                ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 <= ap_reg_pp0_iter2_exitcond_i_i_i_reg_478;
                ap_reg_pp0_iter3_tmp_7_reg_492 <= ap_reg_pp0_iter2_tmp_7_reg_492;
                ap_reg_pp0_iter3_tmp_reg_487 <= ap_reg_pp0_iter2_tmp_reg_487;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond3_reg_464 = ap_const_lv1_1) and (or_cond_reg_454 = ap_const_lv1_1) and (sel_tmp3_reg_448 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then
                d_val_2_2_reg_538 <= lut_s_n0_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond3_reg_464 = ap_const_lv1_1) and (or_cond_reg_454 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (sel_tmp3_reg_448 = ap_const_lv1_0))) then
                d_val_2_3_reg_543 <= lut_s_0_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_459 = ap_const_lv1_1) and (sel_tmp4_reg_426 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (or_cond3_reg_464 = ap_const_lv1_0))) then
                d_val_2_6_reg_548 <= lut_s_0_8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_459 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (or_cond3_reg_464 = ap_const_lv1_0) and (sel_tmp4_reg_426 = ap_const_lv1_0))) then
                d_val_2_7_reg_553 <= lut_s_1_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_V_reg_473 <= i_V_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond3_reg_464 = ap_const_lv1_1) and (ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (or_cond_reg_454 = ap_const_lv1_0))) then
                newSel1_reg_558 <= newSel1_fu_363_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter2_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (or_cond3_reg_464 = ap_const_lv1_0) and (or_cond2_reg_459 = ap_const_lv1_0))) then
                newSel3_reg_563 <= newSel3_fu_370_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                or_cond2_reg_459 <= or_cond2_fu_313_p2;
                or_cond3_reg_464 <= or_cond3_fu_317_p2;
                or_cond_reg_454 <= or_cond_fu_305_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((sat_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_cols_assign_cast_lo_reg_411 <= p_cols_assign_cast_loc_dout;
                p_rows_assign_cast_lo_reg_406 <= p_rows_assign_cast_loc_dout;
                sel_tmp1_reg_443 <= sel_tmp1_fu_293_p2;
                sel_tmp2_reg_421 <= sel_tmp2_fu_269_p2;
                sel_tmp3_reg_448 <= sel_tmp3_fu_299_p2;
                sel_tmp4_reg_426 <= sel_tmp4_fu_275_p2;
                sel_tmp6_reg_432 <= sel_tmp6_fu_281_p2;
                sel_tmp8_reg_437 <= sel_tmp8_fu_287_p2;
                sel_tmp_reg_416 <= sel_tmp_fu_263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then
                tmp_7_reg_492 <= img1_data_stream_1_V_dout;
                tmp_9_reg_497 <= img1_data_stream_2_V_dout;
                tmp_reg_487 <= img1_data_stream_0_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, sat_empty_n, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, exitcond51_i_i_i_fu_327_p2, ap_CS_fsm_state3, exitcond_i_i_i_fu_342_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((sat_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond51_i_i_i_fu_327_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_i_fu_342_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_i_fu_342_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, ap_enable_reg_pp0_iter4, exitcond_i_i_i_reg_478, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((img1_data_stream_2_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_1_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((img2_data_stream_2_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_1_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_0_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, ap_enable_reg_pp0_iter4, exitcond_i_i_i_reg_478, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((img1_data_stream_2_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_1_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((img2_data_stream_2_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_1_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_0_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, ap_enable_reg_pp0_iter4, exitcond_i_i_i_reg_478, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((img1_data_stream_2_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_1_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((img2_data_stream_2_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_1_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_0_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, sat_empty_n)
    begin
                ap_block_state1 <= ((sat_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(img1_data_stream_0_V_empty_n, img1_data_stream_1_V_empty_n, img1_data_stream_2_V_empty_n, exitcond_i_i_i_reg_478)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (((img1_data_stream_2_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_1_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img1_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0)));
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter4_assign_proc : process(img2_data_stream_0_V_full_n, img2_data_stream_1_V_full_n, img2_data_stream_2_V_full_n, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478)
    begin
                ap_block_state8_pp0_stage0_iter4 <= (((img2_data_stream_2_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_1_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)) or ((img2_data_stream_0_V_full_n = ap_const_logic_0) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0)));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond_i_i_i_fu_342_p2)
    begin
        if ((exitcond_i_i_i_fu_342_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond51_i_i_i_fu_327_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond51_i_i_i_fu_327_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond51_i_i_i_fu_327_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond51_i_i_i_fu_327_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond51_i_i_i_fu_327_p2 <= "1" when (t_V_cast_i_i_fu_323_p1 = p_rows_assign_cast_lo_reg_406) else "0";
    exitcond_i_i_i_fu_342_p2 <= "1" when (t_V_1_cast_i_i_fu_338_p1 = p_cols_assign_cast_lo_reg_411) else "0";
    i_V_fu_332_p2 <= std_logic_vector(unsigned(t_V_reg_241) + unsigned(ap_const_lv11_1));

    img1_data_stream_0_V_blk_n_assign_proc : process(img1_data_stream_0_V_empty_n, ap_block_pp0_stage0, exitcond_i_i_i_reg_478, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img1_data_stream_0_V_blk_n <= img1_data_stream_0_V_empty_n;
        else 
            img1_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img1_data_stream_0_V_read_assign_proc : process(exitcond_i_i_i_reg_478, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then 
            img1_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img1_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_1_V_blk_n_assign_proc : process(img1_data_stream_1_V_empty_n, ap_block_pp0_stage0, exitcond_i_i_i_reg_478, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img1_data_stream_1_V_blk_n <= img1_data_stream_1_V_empty_n;
        else 
            img1_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img1_data_stream_1_V_read_assign_proc : process(exitcond_i_i_i_reg_478, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then 
            img1_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img1_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_2_V_blk_n_assign_proc : process(img1_data_stream_2_V_empty_n, ap_block_pp0_stage0, exitcond_i_i_i_reg_478, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img1_data_stream_2_V_blk_n <= img1_data_stream_2_V_empty_n;
        else 
            img1_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img1_data_stream_2_V_read_assign_proc : process(exitcond_i_i_i_reg_478, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then 
            img1_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img1_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_0_V_blk_n_assign_proc : process(img2_data_stream_0_V_full_n, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img2_data_stream_0_V_blk_n <= img2_data_stream_0_V_full_n;
        else 
            img2_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img2_data_stream_0_V_din <= ap_reg_pp0_iter3_tmp_reg_487;

    img2_data_stream_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then 
            img2_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img2_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_1_V_blk_n_assign_proc : process(img2_data_stream_1_V_full_n, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img2_data_stream_1_V_blk_n <= img2_data_stream_1_V_full_n;
        else 
            img2_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img2_data_stream_1_V_din <= ap_reg_pp0_iter3_tmp_7_reg_492;

    img2_data_stream_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then 
            img2_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img2_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_2_V_blk_n_assign_proc : process(img2_data_stream_2_V_full_n, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img2_data_stream_2_V_blk_n <= img2_data_stream_2_V_full_n;
        else 
            img2_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img2_data_stream_2_V_din <= 
        newSel4_fu_386_p3 when (or_cond3_reg_464(0) = '1') else 
        newSel5_fu_392_p3;

    img2_data_stream_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_exitcond_i_i_i_reg_478, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_i_i_i_reg_478 = ap_const_lv1_0))) then 
            img2_data_stream_2_V_write <= ap_const_logic_1;
        else 
            img2_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_347_p2 <= std_logic_vector(unsigned(t_V_2_reg_252) + unsigned(ap_const_lv11_1));
    lut_s_0_2_address0 <= tmp_5_i_i_fu_353_p1(8 - 1 downto 0);

    lut_s_0_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lut_s_0_2_ce0 <= ap_const_logic_1;
        else 
            lut_s_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut_s_0_4_address0 <= tmp_5_i_i_fu_353_p1(8 - 1 downto 0);

    lut_s_0_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lut_s_0_4_ce0 <= ap_const_logic_1;
        else 
            lut_s_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut_s_0_6_address0 <= tmp_5_i_i_fu_353_p1(8 - 1 downto 0);

    lut_s_0_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lut_s_0_6_ce0 <= ap_const_logic_1;
        else 
            lut_s_0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut_s_0_8_address0 <= tmp_5_i_i_fu_353_p1(8 - 1 downto 0);

    lut_s_0_8_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lut_s_0_8_ce0 <= ap_const_logic_1;
        else 
            lut_s_0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut_s_1_0_address0 <= tmp_5_i_i_fu_353_p1(8 - 1 downto 0);

    lut_s_1_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lut_s_1_0_ce0 <= ap_const_logic_1;
        else 
            lut_s_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut_s_1_2_address0 <= tmp_5_i_i_fu_353_p1(8 - 1 downto 0);

    lut_s_1_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lut_s_1_2_ce0 <= ap_const_logic_1;
        else 
            lut_s_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut_s_n0_2_address0 <= tmp_5_i_i_fu_353_p1(8 - 1 downto 0);

    lut_s_n0_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lut_s_n0_2_ce0 <= ap_const_logic_1;
        else 
            lut_s_n0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    newSel1_fu_363_p3 <= 
        lut_s_0_4_q0 when (sel_tmp8_reg_437(0) = '1') else 
        lut_s_0_6_q0;
    newSel2_fu_381_p3 <= 
        d_val_2_6_reg_548 when (sel_tmp4_reg_426(0) = '1') else 
        d_val_2_7_reg_553;
    newSel3_fu_370_p3 <= 
        lut_s_1_2_q0 when (sel_tmp_reg_416(0) = '1') else 
        ap_reg_pp0_iter2_tmp_9_reg_497;
    newSel4_fu_386_p3 <= 
        newSel_fu_376_p3 when (or_cond_reg_454(0) = '1') else 
        newSel1_reg_558;
    newSel5_fu_392_p3 <= 
        newSel2_fu_381_p3 when (or_cond2_reg_459(0) = '1') else 
        newSel3_reg_563;
    newSel_fu_376_p3 <= 
        d_val_2_2_reg_538 when (sel_tmp3_reg_448(0) = '1') else 
        d_val_2_3_reg_543;
    or_cond1_fu_309_p2 <= (sel_tmp8_reg_437 or sel_tmp6_reg_432);
    or_cond2_fu_313_p2 <= (sel_tmp4_reg_426 or sel_tmp2_reg_421);
    or_cond3_fu_317_p2 <= (or_cond_fu_305_p2 or or_cond1_fu_309_p2);
    or_cond_fu_305_p2 <= (sel_tmp3_reg_448 or sel_tmp1_reg_443);

    p_cols_assign_cast_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_cols_assign_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_cols_assign_cast_loc_blk_n <= p_cols_assign_cast_loc_empty_n;
        else 
            p_cols_assign_cast_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_cols_assign_cast_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, sat_empty_n)
    begin
        if ((not(((sat_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_cols_assign_cast_loc_read <= ap_const_logic_1;
        else 
            p_cols_assign_cast_loc_read <= ap_const_logic_0;
        end if; 
    end process;


    p_rows_assign_cast_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_rows_assign_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_rows_assign_cast_loc_blk_n <= p_rows_assign_cast_loc_empty_n;
        else 
            p_rows_assign_cast_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_rows_assign_cast_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, sat_empty_n)
    begin
        if ((not(((sat_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_rows_assign_cast_loc_read <= ap_const_logic_1;
        else 
            p_rows_assign_cast_loc_read <= ap_const_logic_0;
        end if; 
    end process;


    sat_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, sat_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            sat_blk_n <= sat_empty_n;
        else 
            sat_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sat_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_rows_assign_cast_loc_empty_n, p_cols_assign_cast_loc_empty_n, sat_empty_n)
    begin
        if ((not(((sat_empty_n = ap_const_logic_0) or (p_cols_assign_cast_loc_empty_n = ap_const_logic_0) or (p_rows_assign_cast_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            sat_read <= ap_const_logic_1;
        else 
            sat_read <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp1_fu_293_p2 <= "1" when (sat_dout = ap_const_lv8_2) else "0";
    sel_tmp2_fu_269_p2 <= "1" when (sat_dout = ap_const_lv8_6) else "0";
    sel_tmp3_fu_299_p2 <= "1" when (sat_dout = ap_const_lv8_1) else "0";
    sel_tmp4_fu_275_p2 <= "1" when (sat_dout = ap_const_lv8_5) else "0";
    sel_tmp6_fu_281_p2 <= "1" when (sat_dout = ap_const_lv8_4) else "0";
    sel_tmp8_fu_287_p2 <= "1" when (sat_dout = ap_const_lv8_3) else "0";
    sel_tmp_fu_263_p2 <= "1" when (sat_dout = ap_const_lv8_7) else "0";
    t_V_1_cast_i_i_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_252),12));
    t_V_cast_i_i_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_241),12));
    tmp_5_i_i_fu_353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_497),64));
end behav;
